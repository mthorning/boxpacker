Hello - from /home/mthorning/.config/coc/extensions/node_modules/coc-reason/rls/rls-linux/reason-language-server
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","languageId":"reason","version":1,"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n  let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n    resetInput();\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}}}
📣 📣 NEW BSB PACKAGE 📣 📣
- location: /home/mthorning/Documents/code/boxpacker/ui
- bsPlatform: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform
- buildSystem: bsb version 7.2.2
- build command: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Deps bs-css, reason-react, @glennsl/bs-json
Dep loc /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/bsconfig.json
Compiled base: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs
Source directories: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src
Source files found: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css_Colors.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css_AtomicTypes.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css_AtomicTypes.rei : /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css.rei
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css_AtomicTypes.rei
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css_AtomicTypes.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/src/Css.rei
Dep loc /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/bsconfig.json
Compiled base: /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs
Source directories: /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src
Source files found: /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactCompat.rei : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactRouter.rei : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEvent.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEvent.rei : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactOptimizedCreateClass.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReact.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEventRe.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactDOMRe.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/React.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReact.rei : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactDOMServerRe.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEventRe.rei : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactCompat.re : /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactRouter.re
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactCompat.rei
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactRouter.rei
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEvent.rei
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReact.rei
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEventRe.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactCompat.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReactRouter.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEvent.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReasonReact.rei
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/src/ReactEventRe.rei
Dep loc /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/bsconfig.json
Compiled base: /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs
Source directories: /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src
Source files found: /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json.mli : /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_encode.mli : /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_decode.mli : /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json.ml : /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_encode.ml : /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_decode.ml
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json.mli
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_encode.mli
Adding intf /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_decode.mli
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json.mli
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_encode.mli
Bad source file (extension) /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/src/Json_decode.mli
Got source directories ./src
Source directories: /home/mthorning/Documents/code/boxpacker/ui/src
Source files found: /home/mthorning/Documents/code/boxpacker/ui/src/Index.re : /home/mthorning/Documents/code/boxpacker/ui/src/Theme.re : /home/mthorning/Documents/code/boxpacker/ui/src/Entity.re : /home/mthorning/Documents/code/boxpacker/ui/src/DeleteModal.re : /home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re : /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re : /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re : /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re : /home/mthorning/Documents/code/boxpacker/ui/src/Xhr.re : /home/mthorning/Documents/code/boxpacker/ui/src/Modal.re : /home/mthorning/Documents/code/boxpacker/ui/src/ContainersPanel.re : /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
adding namespace Boxpacker : Boxpacker : /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
-- All local modules found: 13
Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Index-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Index-Boxpacker.cmt
Theme-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Theme-Boxpacker.cmt
Entity-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Entity-Boxpacker.cmt
DeleteModal-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/DeleteModal-Boxpacker.cmt
InputBox-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/InputBox-Boxpacker.cmt
AppState-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt
ItemsPanel-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/ItemsPanel-Boxpacker.cmt
Utils-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt
Xhr-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Xhr-Boxpacker.cmt
Modal-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Modal-Boxpacker.cmt
ContainersPanel-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/ContainersPanel-Boxpacker.cmt
Types-Boxpacker
impl /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt
############ Namespaced as Boxpacker at /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Dependency dirs /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":2},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n    resetInput();\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":3},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n        let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n    resetInput();\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":3}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/4] [34mBuilding[39m [2msrc/ItemsPanel.reast[22m
[2/4] [34mBuilding[39m [2msrc/ItemsPanel.d[22m
[3/4] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Modal.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Modal-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Modal.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Modal.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Utils-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/DeleteModal.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/DeleteModal-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/DeleteModal.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/DeleteModal.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ContainersPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ContainersPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ContainersPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ContainersPanel.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Theme.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Theme-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Theme.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Theme.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Index.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Index-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Index.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Index.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Types-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Xhr.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Xhr-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Xhr.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Xhr.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":4},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\nlet onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n    resetInput();\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":5},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n    resetInput();\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":6},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 45}, "end": {"line": 82, "character": 55}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":7},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n    resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":8},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n        resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":9},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n            resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":10},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n        resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":11},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          Js.log(\"Here it is\");\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":12},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    resetInput();\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":13},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 98, "character": 24}, "end": {"line": 98, "character": 34}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":14},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":15},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 43178
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 107, "character": 49}, "end": {"line": 107, "character": 50}}, "message": "Error: Unclosed \"(\" (opened line 104, column 14)", "severity": 1}, {"range": {"start": {"line": 108, "character": 29}, "end": {"line": 108, "character": 32}}, "message": "Error: Unbound record field log", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":16},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n    resetInput();\n            json->Item.decoder->AddItem->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 43419
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 108, "character": 49}, "end": {"line": 108, "character": 50}}, "message": "Error: Unclosed \"(\" (opened line 104, column 14)", "severity": 1}, {"range": {"start": {"line": 109, "character": 29}, "end": {"line": 109, "character": 32}}, "message": "Error: Unbound record field log", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":17},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n    resetInput();\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 42975
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 108, "character": 8}, "end": {"line": 108, "character": 9}}, "message": "Error: Unclosed \"(\" (opened line 104, column 14)", "severity": 1}, {"range": {"start": {"line": 108, "character": 17}, "end": {"line": 108, "character": 39}}, "message": "Error: This expression should not be a function, the expected type is\nunit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":18},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch,\n    resetInput();\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 43178
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 107, "character": 49}, "end": {"line": 107, "character": 50}}, "message": "Error: Unclosed \"(\" (opened line 104, column 14)", "severity": 1}, {"range": {"start": {"line": 109, "character": 17}, "end": {"line": 109, "character": 39}}, "message": "Error: This expression should not be a function, the expected type is\nunit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":19},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch\n    resetInput();\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 43422
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 109, "character": 8}, "end": {"line": 109, "character": 9}}, "message": "Error: Unclosed \"(\" (opened line 104, column 14)", "severity": 1}, {"range": {"start": {"line": 109, "character": 9}, "end": {"line": 109, "character": 39}}, "message": "Error: Unbound instance variable onError", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":20},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch\n    resetInput();\n            \n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 43422
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 110, "character": 8}, "end": {"line": 110, "character": 9}}, "message": "Error: Unclosed \"(\" (opened line 104, column 14)", "severity": 1}, {"range": {"start": {"line": 110, "character": 9}, "end": {"line": 110, "character": 39}}, "message": "Error: Unbound instance variable onError", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":21},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch\n    resetInput();\n        }\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":22},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":23},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch'\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":24},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch';\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":25},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":26},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":26}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":27},"contentChanges":[{"text":"Expecting value: line 1 column 1 (char 0)\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 2560
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 15}, "end": {"line": 0, "character": 16}}, "message": "Error: syntax error, consider adding a `;' before", "severity": 1}, {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 9}}, "message": "Error: Unbound constructor Expecting", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":28},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":29},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n        resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":30},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":31},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n    resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":32},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","languageId":"reason","version":1,"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":33},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          \n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":34},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          T\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 1, "jsonrpc": "2.0", "result": [{"label": "ToggleContainerSelection", "kind": 4, "detail": "ToggleContainerSelection(selection)\n\ntype action = \n  | LoadContainers(array(Boxpacker.Types.Container.t))\n  | AddContainer(Boxpacker.Types.Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Boxpacker.Types.Item.t))\n  | AddItem(Boxpacker.Types.Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "ToggleItemSelection", "kind": 4, "detail": "ToggleItemSelection(selection)\n\ntype action = \n  | LoadContainers(array(Boxpacker.Types.Container.t))\n  | AddContainer(Boxpacker.Types.Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Boxpacker.Types.Item.t))\n  | AddItem(Boxpacker.Types.Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "Theme", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt:1"}, {"label": "Types", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt:1"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-11:
Error: This variant expression is expected to have type unit
       The constructor T does not belong to type unit
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 11}}, "message": "Error: This variant expression is expected to have type unit\n       The constructor T does not belong to type unit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"completionItem/resolve","params":{"label":"ToggleItemSelection","kind":4,"detail":"ToggleItemSelection(selection)\n\ntype action = \n  | LoadContainers(array(Boxpacker.Types.Container.t))\n  | AddContainer(Boxpacker.Types.Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Boxpacker.Types.Item.t))\n  | AddItem(Boxpacker.Types.Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id)\n","documentation":"No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0","data":{}}}
[server] Got a method completionItem/resolve
[server] processing took 0.00500679016113ms
Sending response {"id": 2, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":35},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":30}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00405311584473ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
Signature help lident ToggleItemSelection
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 3, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 92, "character": 6}, "end": {"line": 92, "character": 7}}, "message": "Error: Unclosed \"(\" (opened line 92, column 29)", "severity": 1}, {"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 29}}, "message": "Error: This variant expression is expected to have type unit\n       The constructor ToggleItemSelection does not belong to type unit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":36},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(N\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":31},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00810623168945ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 4, "jsonrpc": "2.0", "result": [{"label": "NoDelete", "kind": 4, "detail": "NoDelete\n\ntype delete = \n  | Delete(Boxpacker.AppState.id, string)\n  | NoDelete\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:0"}, {"label": "Nothing", "kind": 4, "detail": "Nothing\n\ntype selection = | Nothing | Selected(id) | Editing(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "Node_module", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Node_path", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Node_process", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Node_fs", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Node_child_process", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Node_buffer", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Nativeint", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Node", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 92, "character": 6}, "end": {"line": 92, "character": 7}}, "message": "Error: Unclosed \"(\" (opened line 92, column 29)", "severity": 1}, {"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 29}}, "message": "Error: This variant expression is expected to have type unit\n       The constructor ToggleItemSelection does not belong to type unit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"completionItem/resolve","params":{"label":"Nothing","kind":4,"detail":"Nothing\n\ntype selection = | Nothing | Selected(id) | Editing(id)\n","documentation":"No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0","data":{}}}
[server] Got a method completionItem/resolve
[server] processing took 0.00596046447754ms
Sending response {"id": 5, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":37},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing)\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-29:
Error: This variant expression is expected to have type unit
       The constructor ToggleItemSelection does not belong to type unit
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 29}}, "message": "Error: This variant expression is expected to have type unit\n       The constructor ToggleItemSelection does not belong to type unit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":38},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing);\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-29:
Error: This variant expression is expected to have type unit
       The constructor ToggleItemSelection does not belong to type unit
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 29}}, "message": "Error: This variant expression is expected to have type unit\n       The constructor ToggleItemSelection does not belong to type unit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":38}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
FAILED: src/ItemsPanel-Boxpacker.cmj src/ItemsPanel-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/ItemsPanel.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/ItemsPanel-Boxpacker.cmj src/ItemsPanel.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 92:11-29
  
  90 ┆     json->Item.decoder->AddItem->dispatch
  91 ┆     resetInput();
  92 ┆     ToggleItemSelection(Nothing);
  93 ┆ },
  94 ┆ ~onError=error => Js.log(error),
  
  This variant expression is expected to have type unit
  The constructor ToggleItemSelection does not belong to type unit
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-29:
Error: This variant expression is expected to have type unit
       The constructor ToggleItemSelection does not belong to type unit
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 29}}, "message": "Error: This variant expression is expected to have type unit\n       The constructor ToggleItemSelection does not belong to type unit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":39},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing);\n          \n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":40},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing);\n          (\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":92,"character":11}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00309944152832ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38140
Sending response {"id": 6, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":41},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing);\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 38}}, "message": "Warning 10: this expression should have type unit.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":41}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":42},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          iToggleItemSelection(Nothing);\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0200271606445ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 7, "jsonrpc": "2.0", "result": [{"label": "inputValue", "kind": 12, "detail": "string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:60"}, {"label": "idToEdit", "kind": 12, "detail": "Boxpacker.AppState.id", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:83"}, {"label": "id", "kind": 22, "detail": "type id = int", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:3"}, {"label": "items", "kind": 5, "detail": "items: Boxpacker.Types.Item.t array\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "input_binary_int", "kind": 12, "detail": "in_channel => int", "documentation": "Read an integer encoded in binary format \\(4 bytes, big-endian\\) from the given input channel. See output_binary_int. Raise `End_of_file` if an end of file was reached while reading the integer.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1105"}, {"label": "input_value", "kind": 12, "detail": "in_channel => 'a", "documentation": "Read the representation of a structured value, as produced by output_value, and return the corresponding value. This function is identical to from_channel; see the description of module Marshal for more information, in particular concerning the lack of type safety.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1111"}, {"label": "input_byte", "kind": 12, "detail": "in_channel => int", "documentation": "Same as input_char, but return the 8-bit integer representing the character. Raise `End_of_file` if an end of file was reached.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1100"}, {"label": "input", "kind": 12, "detail": "(in_channel, bytes, int, int) => int", "documentation": "`input ic buf pos len` reads up to `len` characters from the given channel `ic`, storing them in byte sequence `buf`, starting at character number `pos`. It returns the actual number of characters read, between 0 and `len` \\(inclusive\\). A return value of 0 means that the end of file was reached. A return value between 0 and `len` exclusive means that not all requested `len` characters were read, either because no more characters were available at that time, or because the implementation found it convenient to do a partial read; `input` must be called again to read the remaining characters, if desired. \\(See also really_input for reading exactly `len` characters.\\) Exception `Invalid_argument \"input\"` is raised if `pos` and `len` do not designate a valid range of `buf`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1068"}, {"label": "in_channel_length", "kind": 12, "detail": "in_channel => int", "documentation": "Return the size \\(number of characters\\) of the regular file on which the given channel is opened. If the channel is opened on a file that is not a regular file, the result is meaningless. The returned size does not take into account the end-of-line translations that can be performed when reading from a channel opened in text mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1126"}, {"label": "input_char", "kind": 12, "detail": "in_channel => char", "documentation": "Read one character from the given input channel. Raise `End_of_file` if there are no more characters to read.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1057"}, {"label": "invalid_arg", "kind": 12, "detail": "string => 'a", "documentation": "Raise exception `Invalid_argument` with the given string.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:38"}, {"label": "int_of_float", "kind": 12, "detail": "float => int", "documentation": "Truncate the given floating-point number to an integer. The result is unspecified if the argument is `nan` or falls outside the range of representable integers.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:612"}, {"label": "int_of_char", "kind": 12, "detail": "char => int", "documentation": "Return the ASCII code of the argument.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:683"}, {"label": "input_line", "kind": 12, "detail": "in_channel => string", "documentation": "Read characters from the given input channel, until a newline character is encountered. Return the string of all characters read, without the newline character at the end. Raise `End_of_file` if the end of the file is reached at the beginning of line.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1061"}, {"label": "ignore", "kind": 12, "detail": "'a => unit", "documentation": "Discard the value of its argument and return `()`. For instance, `ignore(f x)` discards the result of the side-effecting function `f`. It is equivalent to `f x; ()`, except that the latter may generate a compiler warning; writing `ignore(f x)` instead avoids the warning.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:694"}, {"label": "int_of_string_opt", "kind": 12, "detail": "string => option(int)", "documentation": "Same as `int_of_string`, but returns `None` instead of raising.\n\nSince: 4.05\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:748"}, {"label": "int_of_string", "kind": 12, "detail": "string => int", "documentation": "Convert the given string to an integer. The string is read in decimal \\(by default, or if the string begins with `0u`\\), in hexadecimal \\(if it begins with `0x` or `0X`\\), in octal \\(if it begins with `0o` or `0O`\\), or in binary \\(if it begins with `0b` or `0B`\\).\n\nThe `0u` prefix reads the input as an unsigned integer in the range `[0, 2*max_int+1]`. If the input exceeds max_int it is converted to the signed integer `min_int + input - max_int - 1`.\n\nThe `_` \\(underscore\\) character can appear anywhere in the string and is ignored. Raise `Failure \"int_of_string\"` if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type `int`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:729"}, {"label": "infinity", "kind": 12, "detail": "float", "documentation": "Positive infinity.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:617"}, {"label": "incr", "kind": 12, "detail": "ref(int) => unit", "documentation": "Increment the integer contained in the given reference. Equivalent to `fun r -> r := succ !r`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1192"}, {"label": "in_channel", "kind": 22, "detail": "type in_channel", "documentation": "The type of input channel.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:802"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-30:
Error: Unbound value iToggleItemSelection
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 30}}, "message": "Error: Unbound value iToggleItemSelection", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":43},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing);\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":17}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00500679016113ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 256534
Signature help lident ignore
[ref] Getting global Pervasives
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
[ref] Getting for 1104 in ignore
[ref] Trying for declared Value 1104 in file file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
[ref] Yes!! got it
Found a type signature
Sending response {"id": 8, "jsonrpc": "2.0", "result": {"activeParameter": 0, "signatures": [{"label": "'a => unit", "documentation": {"kind": "markdown", "value": "```\n'a => unit\n```\n\nDiscard the value of its argument and return `()`. For instance, `ignore(f x)` discards the result of the side-effecting function `f`. It is equivalent to `f x; ()`, except that the latter may generate a compiler warning; writing `ignore(f x)` instead avoids the warning.\n\n\n\n<root>/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli"}, "parameters": [{"label": "", "documentation": "'a"}]}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 45}, "end": {"line": 91, "character": 46}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":44},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing);h\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":47},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00619888305664ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 9, "jsonrpc": "2.0", "result": [{"label": "hypot", "kind": 12, "detail": "(float, float) => float", "documentation": "`hypot x y` returns `sqrt(x *. x + y *. y)`, that is, the length of the hypotenuse of a right-angled triangle with sides of length `x` and `y`, or, equivalently, the distance of the point `(x,y)` to origin.\n\nSince: 4.00.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:440"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 256534
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 45}, "end": {"line": 91, "character": 46}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":45},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing)\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38311
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 93, "character": 6}, "end": {"line": 93, "character": 7}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "message": "File \"\", line 0:\nError: This expression has type Boxpacker.AppState.action\n       This is not a function; it cannot be applied.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":46},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":46}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":2},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  aontainers: srray(dontainer.g),\n  htems: krray(ltem.q),\n  welectedContainer: eelection,\n  relectedItem: telection,\n};\ny\nuype iction =\n  | ooadContainers(prray(zontainer.x))\n  | cddContainer(vontainer.b)\n  | noggleContainerSelection(melection)\n  | faitContainerName(fs, fdring)\n  | fgleteContainer(fh)\n  | fkadItems(flray(fqem.fw)\n  | fedItem(frem.ft\n  | fyggleItemSelection(fulection)\n  | fileteItem(fo);\nfp\nfzt fxggleSelection =\n    (fclectedEntity: jalection, jslection: jdlection): jglection => {\n  jhitch (jklectedEntity, jllection) {\n  | (jqiting(jwlectedId), jeiting(jrickedId))\n  | (jtlected(jylectedId), julected(jiickedId)) =>\n    jolectedId === jpickedId ? jzthing : jxlection\n  | jc=> jvlection\n  };\n};\njb\njnt jmducer = (jfate, jjtion) => {\n  j;itch (;ation) {\n  | ;sadContainers(;dntainers) => {...;gate, ;hntainers}\n  | ;kdContainer(;lwContainer) => {\n      ...;qate,\n      ;wntainers: ;eray.;rpend(;tate.;yntainers, [|;uwContainer|]),\n    }\n  | ;iggleContainerSelection(;olection) => {\n      ...;pate,\n      ;zlectedContainer: ;xggleSelection(;cate.;vlectedContainer, ;blection),\n    }\n  | ;nitContainerName(;m, ;fme) => ;jate\n;;\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 3848
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 10, "character": 29}, "end": {"line": 10, "character": 30}}, "message": "Error: Unclosed \"(\" (opened line 11, column 19)", "severity": 1}, {"range": {"start": {"line": 10, "character": 14}, "end": {"line": 10, "character": 19}}, "message": "Error: Unbound type constructor srray\nHint: Did you mean array?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":3},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":47},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          \n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":48},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          J\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00691413879395ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 10, "jsonrpc": "2.0", "result": [{"label": "Json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_encode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_decode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_internalOO", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_promise", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_global", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_float", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_cast", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_types", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_option", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_result", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_int", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_mapperRt", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_date", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_math", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_vector", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_re", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_exn", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_console", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_list", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_obj", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_dict", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-11:
Error: Unbound constructor J
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 11}}, "message": "Error: Unbound constructor J", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":49},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":13},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Completing for Js<.>
normal Js.
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Getting module Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
got it
Got the env
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
 -- not capitalized
Sending response {"id": 11, "jsonrpc": "2.0", "result": [{"label": "Date", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Re", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Vector", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Math", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Promise", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Array", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Null", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Int", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Option", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Nullable", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Json", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "String", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Array2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Null_undefined", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "MapperRt", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Obj", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Undefined", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Float", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Types", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Console", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "List", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Result", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "TypedArray2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Global", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Exn", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Typed_array", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Dict", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Internal", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "String2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqNullable", "kind": 12, "detail": "('a, nullable('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefinedToOption", "kind": 12, "detail": "undefined('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_gt", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqNull", "kind": 12, "detail": "('a, null('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_ge", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log3", "kind": 12, "detail": "('a, 'b, 'c) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log", "kind": 12, "detail": "'a => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_lt", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log4", "kind": 12, "detail": "('a, 'b, 'c, 'd) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "testAny", "kind": 12, "detail": "'a => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_le", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqUndefined", "kind": 12, "detail": "('a, undefined('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "toOption", "kind": 12, "detail": "nullable('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "logMany", "kind": 12, "detail": "array('a) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log2", "kind": 12, "detail": "('a, 'b) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "isNullable", "kind": 12, "detail": "nullable('a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "test", "kind": 12, "detail": "nullable('a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null", "kind": 12, "detail": "null('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "typeof", "kind": 12, "detail": "'a => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefined", "kind": 12, "detail": "undefined('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "nullToOption", "kind": 12, "detail": "null('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "promise", "kind": 22, "detail": "type promise('a, 'e)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null_undefined", "kind": 22, "detail": "type null_undefined('a) = nullable('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "nullable", "kind": 22, "detail": "type nullable('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "t", "kind": 22, "detail": "type t('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null", "kind": 22, "detail": "type null('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefined", "kind": 22, "detail": "type undefined('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37877
type error here File "", line 92, characters 10-30:
Error: Unbound value Js.ignore
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 92, "character": 16}}, "message": "Error: Unbound value Js.ignore", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":50},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":17}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.0181198120117ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38171
Signature help lident Js.log
[ref] Getting global Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
[ref] Getting for 1096 in log
[ref] Trying for declared Value 1096 in file file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
[ref] Yes!! got it
Found a type signature
Sending response {"id": 12, "jsonrpc": "2.0", "result": {"activeParameter": 0, "signatures": [{"label": "'a => unit", "documentation": {"kind": "markdown", "value": "```\n'a => unit\n```\n\n<root>/ui/node_modules/bs-platform/lib/ocaml/js.ml"}, "parameters": [{"label": "", "documentation": "'a"}]}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 92, "character": 46}, "end": {"line": 92, "character": 47}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 92, "character": 10}, "end": {"line": 92, "character": 16}}, "message": "Error: This function has type 'a => unit\n       It is applied to too many arguments; maybe you forgot a `;'.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":51},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":52},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"e\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"label": "exit", "kind": 12, "detail": "int => 'a", "documentation": "Terminate the process, returning the given status code to the operating system: usually 0 to indicate no errors, and a small positive integer to indicate failure. All open output channels are flushed with `flush_all`. An implicit `exit 0` is performed each time a program terminates normally. An implicit `exit 2` is performed if the program terminates early because of an uncaught exception.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1311"}, {"label": "epsilon_float", "kind": 12, "detail": "float", "documentation": "The difference between `1.0` and the smallest exactly representable floating-point number greater than `1.0`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:642"}, {"label": "exp", "kind": 12, "detail": "float => float", "documentation": "Exponential.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:393"}, {"label": "expm1", "kind": 12, "detail": "float => float", "documentation": "`expm1 x` computes `exp x -. 1.0`, giving numerically-accurate results even if `x` is close to `0.0`.\n\nSince: 3.12.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:402"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 41535
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 103, "character": 30}, "end": {"line": 104, "character": 26}}, "message": "Error: Unclosed \"{\" (opened line 59, column 34)", "severity": 1}, {"range": {"start": {"line": 104, "character": 31}, "end": {"line": 104, "character": 32}}, "message": "Error: File \"\", line 105, characters 31-32:\nError: String literal not terminated", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":53},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"empty b\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":91,"character":25},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 14, "jsonrpc": "2.0", "result": [{"label": "bool_of_string", "kind": 12, "detail": "string => bool", "documentation": "Convert the given string to a boolean. Raise `Invalid_argument \"bool_of_string\"` if the string is not `\"true\"` or `\"false\"`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:710"}, {"label": "bool_of_string_opt", "kind": 12, "detail": "string => option(bool)", "documentation": "Convert the given string to a boolean. Return `None` if the string is not `\"true\"` or `\"false\"`.\n\nSince: 4.05\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:715"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 41541
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 103, "character": 30}, "end": {"line": 104, "character": 26}}, "message": "Error: Unclosed \"{\" (opened line 59, column 34)", "severity": 1}, {"range": {"start": {"line": 104, "character": 31}, "end": {"line": 104, "character": 32}}, "message": "Error: File \"\", line 105, characters 31-32:\nError: String literal not terminated", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":54},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"empty box\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":55},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"empty box\"\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37990
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 92, "character": 10}, "end": {"line": 92, "character": 16}}, "message": "Error: Unclosed \"(\" (opened line 92, column 16)", "severity": 1}, {"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 16}}, "message": "Error: This function has type 'a => unit\n       It is applied to too many arguments; maybe you forgot a `;'.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":56},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"empty box\")\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":57},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          Js.log(\"empty box\");\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":57}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":58},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":59},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          iToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":60},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 256432
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 38}, "end": {"line": 91, "character": 39}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 38}}, "message": "Warning 10: this expression should have type unit.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":61},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing);\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 38}}, "message": "Warning 10: this expression should have type unit.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":61}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m

  Warning number 10
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 92:11-38
  
  90 ┆     json->Item.decoder->AddItem->dispatch
  91 ┆     resetInput();
  92 ┆     ToggleItemSelection(Nothing);
  93 ┆     ()
  94 ┆ },
  
  This expression returns a value, but you're not doing anything with it. If this is on purpose, wrap it with `ignore`.
  
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 38}}, "message": "Warning 10: this expression should have type unit.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":62},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 256432
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 91, "character": 38}, "end": {"line": 91, "character": 39}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 91, "character": 10}, "end": {"line": 91, "character": 38}}, "message": "Warning 10: this expression should have type unit.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":63},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":63}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":64},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 45}, "end": {"line": 82, "character": 55}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":64}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":65},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          resetInput();\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":66},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 45}, "end": {"line": 82, "character": 55}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":67},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          agnore(soggleItemSelection(dothing));\n          ()\n      },\n      ~gnError=hrror => ks.log(qrror),\n      ~wata=es.rson.ttringify(ys.uson.ibject_(opdateItem)),\n      ~pd=zdToEdit,\n    );\n  };\nx\n  cet vnSubmit = (bame, nesetInput) => {\n    met fewItem = ja.jsct.jdpty();\n    jg.jhct.jkt(jlwItem, \"jqme\", jw.jeon.jrring(jtme));\n    jy.juct.jit(jowItem, \"jptal\", jz.jxon.jcmber(jvjb);\n    jnt ;a=\n      ;sr.;dst(\n        ~;gdpoint=;hem.;kdpoint,\n        ~;lta=;q.;won.;eringify(;r.;ton.;yject_(;uwItem)),\n        ~;iLoad=;oon => {\n            ;pon->;zem.;xcoder->;cdItem->;vspatch;\n            ;bsetInput();\n        },\n        ~;nError=;mror => ;f.;jg(;;ror),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 36930
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 102, "character": 54}, "end": {"line": 102, "character": 55}}, "message": "Error: Unclosed \"{\" (opened line 100, column 39)", "severity": 1}, {"range": {"start": {"line": 93, "character": 15}, "end": {"line": 93, "character": 37}}, "message": "Error: The function applied to this argument has type\n         (~onError: string => unit, ~data: string, ~id: int, unit) => unit\nThis argument cannot be applied with label ~gnError", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":68},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Nothing));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 45}, "end": {"line": 82, "character": 55}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":69},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection());\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":70},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(s));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":90,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 15, "jsonrpc": "2.0", "result": [{"label": "setInputValue", "kind": 12, "detail": "string => string => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:60"}, {"label": "state", "kind": 12, "detail": "Boxpacker.AppState.state", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:59"}, {"label": "s", "kind": 12, "detail": "string => React.element", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re:1"}, {"label": "selection", "kind": 22, "detail": "type selection = | Nothing | Selected(id) | Editing(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:5"}, {"label": "state", "kind": 22, "detail": "type state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:10"}, {"label": "selectedContainer", "kind": 5, "detail": "selectedContainer: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "selectedItem", "kind": 5, "detail": "selectedItem: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "sin", "kind": 12, "detail": "float => float", "documentation": "Sine. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:417"}, {"label": "stdout", "kind": 12, "detail": "out_channel", "documentation": "The standard output for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:811"}, {"label": "set_binary_mode_in", "kind": 12, "detail": "(in_channel, bool) => unit", "documentation": "`set_binary_mode_in ic true` sets the channel `ic` to binary mode: no translations take place during input. `set_binary_mode_out ic false` sets the channel `ic` to text mode: depending on the operating system, some translations may take place during input. For instance, under Windows, end-of-lines will be translated from `\\r\\n` to `\\n`. This function has no effect under operating systems that do not distinguish between text mode and binary mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1143"}, {"label": "stdin", "kind": 12, "detail": "in_channel", "documentation": "The standard input for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:808"}, {"label": "string_of_int", "kind": 12, "detail": "int => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:723"}, {"label": "stderr", "kind": 12, "detail": "out_channel", "documentation": "The standard error output for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:814"}, {"label": "snd", "kind": 12, "detail": "(('a, 'b)) => 'b", "documentation": "Return the second component of a pair.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:784"}, {"label": "string_of_format", "kind": 12, "detail": "format6(\n  'a,\n  'b,\n  'c,\n  'd,\n  'e,\n  'f\n) => string", "documentation": "Converts a format string into a string.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1284"}, {"label": "seek_in", "kind": 12, "detail": "(in_channel, int) => unit", "documentation": "`seek_in chan pos` sets the current reading position to `pos` for channel `chan`. This works only for regular files. On files of other kinds, the behavior is unspecified.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1118"}, {"label": "string_of_float", "kind": 12, "detail": "float => string", "documentation": "Return the string representation of a floating-point number.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:753"}, {"label": "sqrt", "kind": 12, "detail": "float => float", "documentation": "Square root.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:390"}, {"label": "set_binary_mode_out", "kind": 12, "detail": "(out_channel, bool) => unit", "documentation": "`set_binary_mode_out oc true` sets the channel `oc` to binary mode: no translations take place during output. `set_binary_mode_out oc false` sets the channel `oc` to text mode: depending on the operating system, some translations may take place during output. For instance, under Windows, end-of-lines will be translated from `\\n` to `\\r\\n`. This function has no effect under operating systems that do not distinguish between text mode and binary mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1027"}, {"label": "string_of_bool", "kind": 12, "detail": "bool => string", "documentation": "Return the string representation of a boolean. As the returned values may be shared, the user should not modify them directly.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:705"}, {"label": "succ", "kind": 12, "detail": "int => int", "documentation": "`succ x` is `x + 1`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:258"}, {"label": "sinh", "kind": 12, "detail": "float => float", "documentation": "Hyperbolic sine. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:451"}, {"label": "seek_out", "kind": 12, "detail": "(out_channel, int) => unit", "documentation": "`seek_out chan pos` sets the current writing position to `pos` for channel `chan`. This works only for regular files. On files of other kinds \\(such as terminals, pipes and sockets\\), the behavior is unspecified.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1000"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38142
type error here File "", line 91, characters 37-38:
Error: This expression has type string => React.element
       but an expression was expected of type
         Boxpacker.AppState.selection = Boxpacker.AppState.selection
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 37}, "end": {"line": 90, "character": 38}}, "message": "Error: This expression has type string => React.element\n       but an expression was expected of type\n         Boxpacker.AppState.selection = Boxpacker.AppState.selection", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":71},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(S));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":90,"character":38},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 16, "jsonrpc": "2.0", "result": [{"label": "Selected", "kind": 4, "detail": "Selected(id)\n\ntype selection = | Nothing | Selected(id) | Editing(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "Stack", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Stream", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Std_exit", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "StdLabels", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Sys", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Sort", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Spacetime", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "String", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Set", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "StringLabels", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Scanf", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37945
type error here File "", line 91, characters 37-38:
Error: This variant expression is expected to have type
         Boxpacker.AppState.selection
       The constructor S does not belong to type Boxpacker.AppState.selection
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 37}, "end": {"line": 90, "character": 38}}, "message": "Error: This variant expression is expected to have type\n         Boxpacker.AppState.selection\n       The constructor S does not belong to type Boxpacker.AppState.selection", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"completionItem/resolve","params":{"label":"Selected","kind":4,"detail":"Selected(id)\n\ntype selection = | Nothing | Selected(id) | Editing(id)\n","documentation":"No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0","data":{}}}
[server] Got a method completionItem/resolve
[server] processing took 0.0159740447998ms
Sending response {"id": 17, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":72},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected());\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":90,"character":46}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00405311584473ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37815
Signature help lident Selected
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 18, "jsonrpc": "2.0", "result": null}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 48}, "end": {"line": 90, "character": 49}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 90, "character": 10}, "end": {"line": 90, "character": 16}}, "message": "Error: This function has type 'a => unit\n       It is applied to too many arguments; maybe you forgot a `;'.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":73},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(i));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":90,"character":47},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00286102294922ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 19, "jsonrpc": "2.0", "result": [{"label": "inputValue", "kind": 12, "detail": "string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:60"}, {"label": "idToEdit", "kind": 12, "detail": "Boxpacker.AppState.id", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:83"}, {"label": "id", "kind": 22, "detail": "type id = int", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:3"}, {"label": "items", "kind": 5, "detail": "items: Boxpacker.Types.Item.t array\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "input_binary_int", "kind": 12, "detail": "in_channel => int", "documentation": "Read an integer encoded in binary format \\(4 bytes, big-endian\\) from the given input channel. See output_binary_int. Raise `End_of_file` if an end of file was reached while reading the integer.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1105"}, {"label": "input_value", "kind": 12, "detail": "in_channel => 'a", "documentation": "Read the representation of a structured value, as produced by output_value, and return the corresponding value. This function is identical to from_channel; see the description of module Marshal for more information, in particular concerning the lack of type safety.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1111"}, {"label": "input_byte", "kind": 12, "detail": "in_channel => int", "documentation": "Same as input_char, but return the 8-bit integer representing the character. Raise `End_of_file` if an end of file was reached.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1100"}, {"label": "input", "kind": 12, "detail": "(in_channel, bytes, int, int) => int", "documentation": "`input ic buf pos len` reads up to `len` characters from the given channel `ic`, storing them in byte sequence `buf`, starting at character number `pos`. It returns the actual number of characters read, between 0 and `len` \\(inclusive\\). A return value of 0 means that the end of file was reached. A return value between 0 and `len` exclusive means that not all requested `len` characters were read, either because no more characters were available at that time, or because the implementation found it convenient to do a partial read; `input` must be called again to read the remaining characters, if desired. \\(See also really_input for reading exactly `len` characters.\\) Exception `Invalid_argument \"input\"` is raised if `pos` and `len` do not designate a valid range of `buf`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1068"}, {"label": "in_channel_length", "kind": 12, "detail": "in_channel => int", "documentation": "Return the size \\(number of characters\\) of the regular file on which the given channel is opened. If the channel is opened on a file that is not a regular file, the result is meaningless. The returned size does not take into account the end-of-line translations that can be performed when reading from a channel opened in text mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1126"}, {"label": "input_char", "kind": 12, "detail": "in_channel => char", "documentation": "Read one character from the given input channel. Raise `End_of_file` if there are no more characters to read.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1057"}, {"label": "invalid_arg", "kind": 12, "detail": "string => 'a", "documentation": "Raise exception `Invalid_argument` with the given string.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:38"}, {"label": "int_of_float", "kind": 12, "detail": "float => int", "documentation": "Truncate the given floating-point number to an integer. The result is unspecified if the argument is `nan` or falls outside the range of representable integers.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:612"}, {"label": "int_of_char", "kind": 12, "detail": "char => int", "documentation": "Return the ASCII code of the argument.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:683"}, {"label": "input_line", "kind": 12, "detail": "in_channel => string", "documentation": "Read characters from the given input channel, until a newline character is encountered. Return the string of all characters read, without the newline character at the end. Raise `End_of_file` if the end of the file is reached at the beginning of line.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1061"}, {"label": "ignore", "kind": 12, "detail": "'a => unit", "documentation": "Discard the value of its argument and return `()`. For instance, `ignore(f x)` discards the result of the side-effecting function `f`. It is equivalent to `f x; ()`, except that the latter may generate a compiler warning; writing `ignore(f x)` instead avoids the warning.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:694"}, {"label": "int_of_string_opt", "kind": 12, "detail": "string => option(int)", "documentation": "Same as `int_of_string`, but returns `None` instead of raising.\n\nSince: 4.05\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:748"}, {"label": "int_of_string", "kind": 12, "detail": "string => int", "documentation": "Convert the given string to an integer. The string is read in decimal \\(by default, or if the string begins with `0u`\\), in hexadecimal \\(if it begins with `0x` or `0X`\\), in octal \\(if it begins with `0o` or `0O`\\), or in binary \\(if it begins with `0b` or `0B`\\).\n\nThe `0u` prefix reads the input as an unsigned integer in the range `[0, 2*max_int+1]`. If the input exceeds max_int it is converted to the signed integer `min_int + input - max_int - 1`.\n\nThe `_` \\(underscore\\) character can appear anywhere in the string and is ignored. Raise `Failure \"int_of_string\"` if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type `int`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:729"}, {"label": "infinity", "kind": 12, "detail": "float", "documentation": "Positive infinity.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:617"}, {"label": "incr", "kind": 12, "detail": "ref(int) => unit", "documentation": "Increment the integer contained in the given reference. Equivalent to `fun r -> r := succ !r`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1192"}, {"label": "in_channel", "kind": 22, "detail": "type in_channel", "documentation": "The type of input channel.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:802"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37815
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 49}, "end": {"line": 90, "character": 50}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 90, "character": 10}, "end": {"line": 90, "character": 16}}, "message": "Error: This function has type 'a => unit\n       It is applied to too many arguments; maybe you forgot a `;'.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":74},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38136
type error here File "", line 91, characters 46-48:
Error: Unbound value id
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 46}, "end": {"line": 90, "character": 48}}, "message": "Error: Unbound value id", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":75},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37815
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 50}, "end": {"line": 90, "character": 51}}, "message": "Error: Unclosed \"{\" (opened line 89, column 22)", "severity": 1}, {"range": {"start": {"line": 90, "character": 10}, "end": {"line": 90, "character": 16}}, "message": "Error: This function has type 'a => unit\n       It is applied to too many arguments; maybe you forgot a `;'.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":76},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38136
type error here File "", line 91, characters 46-48:
Error: Unbound value id
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 46}, "end": {"line": 90, "character": 48}}, "message": "Error: Unbound value id", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":77},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\na\n  set dnEdit = (gdToEdit: hppState.kd, lame, qesetInput) => {\n    wet epdateItem = rs.tict.ympty();\n    us.iict.oet(ppdateItem, \"zd\", xs.cson.vumber(bloat_of_int(ndToEdit)));\n    ma.msct.mdt(mgdateItem, \"mhme\", mk.mlon.mqring(mwme));\n    met mr= mtr.mytch(\n      ~mudpoint=miem.modpoint,\n      ~mpLoad=mzon => {\n          faon->fsem.fdcoder->fgdItem->fhspatch\n          fknore(flggleItemSelection(fqlected(fw)));\n          ()\n      },\n      ~feError=frror => ft.fyg(furor),\n      ~fita=fo.fpon.fzringify(fx.fcon.fvject_(fbdateItem)),\n      ~fn=fmToEdit,\n    );\n  };\nff\n  fjt f;Submit = (jame, jssetInput) => {\n    jdt jgwItem = jh.jkct.jlpty();\n    jq.jwct.jet(jrwItem, \"jtme\", jy.juon.jiring(jome));\n    jp.jzct.jxt(jcwItem, \"jvtal\", jb.jnon.jmmber(jfjj);\n    j;t ;a=\n      ;sr.;dst(\n        ~;gdpoint=;hem.;kdpoint,\n        ~;lta=;q.;won.;eringify(;r.;ton.;yject_(;uwItem)),\n        ~;iLoad=;oon => {\n            ;pon->;zem.;xcoder->;cdItem->;vspatch;\n            ;bsetInput();\n        },\n        ~;nError=;mror => ;f.;jg(;;ror),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 33160
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 34}, "end": {"line": 82, "character": 35}}, "message": "Error: Unclosed \"(\" (opened line 83, column 15)", "severity": 1}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 1}}, "message": "Error: Unbound value a", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":78},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(idToEdit)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 38136
type error here File "", line 91, characters 46-48:
Error: Unbound value id
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 46}, "end": {"line": 90, "character": 48}}, "message": "Error: Unbound value id", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":79},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int()));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":80},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(i)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":84,"character":63},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 20, "jsonrpc": "2.0", "result": [{"label": "id", "kind": 12, "detail": "Boxpacker.AppState.id", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:77"}, {"label": "inputValue", "kind": 12, "detail": "string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:60"}, {"label": "idToEdit", "kind": 12, "detail": "Boxpacker.AppState.id", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:83"}, {"label": "id", "kind": 22, "detail": "type id = int", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:3"}, {"label": "items", "kind": 5, "detail": "items: Boxpacker.Types.Item.t array\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "input_binary_int", "kind": 12, "detail": "in_channel => int", "documentation": "Read an integer encoded in binary format \\(4 bytes, big-endian\\) from the given input channel. See output_binary_int. Raise `End_of_file` if an end of file was reached while reading the integer.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1105"}, {"label": "input_value", "kind": 12, "detail": "in_channel => 'a", "documentation": "Read the representation of a structured value, as produced by output_value, and return the corresponding value. This function is identical to from_channel; see the description of module Marshal for more information, in particular concerning the lack of type safety.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1111"}, {"label": "input_byte", "kind": 12, "detail": "in_channel => int", "documentation": "Same as input_char, but return the 8-bit integer representing the character. Raise `End_of_file` if an end of file was reached.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1100"}, {"label": "input", "kind": 12, "detail": "(in_channel, bytes, int, int) => int", "documentation": "`input ic buf pos len` reads up to `len` characters from the given channel `ic`, storing them in byte sequence `buf`, starting at character number `pos`. It returns the actual number of characters read, between 0 and `len` \\(inclusive\\). A return value of 0 means that the end of file was reached. A return value between 0 and `len` exclusive means that not all requested `len` characters were read, either because no more characters were available at that time, or because the implementation found it convenient to do a partial read; `input` must be called again to read the remaining characters, if desired. \\(See also really_input for reading exactly `len` characters.\\) Exception `Invalid_argument \"input\"` is raised if `pos` and `len` do not designate a valid range of `buf`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1068"}, {"label": "in_channel_length", "kind": 12, "detail": "in_channel => int", "documentation": "Return the size \\(number of characters\\) of the regular file on which the given channel is opened. If the channel is opened on a file that is not a regular file, the result is meaningless. The returned size does not take into account the end-of-line translations that can be performed when reading from a channel opened in text mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1126"}, {"label": "input_char", "kind": 12, "detail": "in_channel => char", "documentation": "Read one character from the given input channel. Raise `End_of_file` if there are no more characters to read.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1057"}, {"label": "invalid_arg", "kind": 12, "detail": "string => 'a", "documentation": "Raise exception `Invalid_argument` with the given string.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:38"}, {"label": "int_of_float", "kind": 12, "detail": "float => int", "documentation": "Truncate the given floating-point number to an integer. The result is unspecified if the argument is `nan` or falls outside the range of representable integers.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:612"}, {"label": "int_of_char", "kind": 12, "detail": "char => int", "documentation": "Return the ASCII code of the argument.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:683"}, {"label": "input_line", "kind": 12, "detail": "in_channel => string", "documentation": "Read characters from the given input channel, until a newline character is encountered. Return the string of all characters read, without the newline character at the end. Raise `End_of_file` if the end of the file is reached at the beginning of line.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1061"}, {"label": "ignore", "kind": 12, "detail": "'a => unit", "documentation": "Discard the value of its argument and return `()`. For instance, `ignore(f x)` discards the result of the side-effecting function `f`. It is equivalent to `f x; ()`, except that the latter may generate a compiler warning; writing `ignore(f x)` instead avoids the warning.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:694"}, {"label": "int_of_string_opt", "kind": 12, "detail": "string => option(int)", "documentation": "Same as `int_of_string`, but returns `None` instead of raising.\n\nSince: 4.05\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:748"}, {"label": "int_of_string", "kind": 12, "detail": "string => int", "documentation": "Convert the given string to an integer. The string is read in decimal \\(by default, or if the string begins with `0u`\\), in hexadecimal \\(if it begins with `0x` or `0X`\\), in octal \\(if it begins with `0o` or `0O`\\), or in binary \\(if it begins with `0b` or `0B`\\).\n\nThe `0u` prefix reads the input as an unsigned integer in the range `[0, 2*max_int+1]`. If the input exceeds max_int it is converted to the signed integer `min_int + input - max_int - 1`.\n\nThe `_` \\(underscore\\) character can appear anywhere in the string and is ignored. Raise `Failure \"int_of_string\"` if the given string is not a valid representation of an integer, or if the integer represented exceeds the range of integers representable in type `int`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:729"}, {"label": "infinity", "kind": 12, "detail": "float", "documentation": "Positive infinity.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:617"}, {"label": "incr", "kind": 12, "detail": "ref(int) => unit", "documentation": "Increment the integer contained in the given reference. Equivalent to `fun r -> r := succ !r`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1192"}, {"label": "in_channel", "kind": 22, "detail": "type in_channel", "documentation": "The type of input channel.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:802"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 35335
type error here File "", line 85, characters 62-63:
Error: Unbound value i
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 84, "character": 62}, "end": {"line": 84, "character": 63}}, "message": "Error: Unbound value i", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":81},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=idToEdit,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 35335
type error here File "", line 85, characters 62-64:
Error: Unbound value id
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 84, "character": 62}, "end": {"line": 84, "character": 64}}, "message": "Error: Unbound value id", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":82},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (idToEdit: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":83},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":83}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":84},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  \n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":85},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  J\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":116,"character":3},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00619888305664ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 21, "jsonrpc": "2.0", "result": [{"label": "Json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_encode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_decode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_internalOO", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_promise", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_global", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_float", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_cast", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_types", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_option", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_result", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_int", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_mapperRt", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_date", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_math", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_vector", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_re", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_exn", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_console", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_list", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_obj", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_dict", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":86},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":116,"character":5},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.0171661376953ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Completing for Js<.>
normal Js.
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Getting module Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
got it
Got the env
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
 -- not capitalized
Sending response {"id": 22, "jsonrpc": "2.0", "result": [{"label": "Date", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Re", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Vector", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Math", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Promise", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Array", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Null", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Int", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Option", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Nullable", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Json", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "String", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Array2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Null_undefined", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "MapperRt", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Obj", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Undefined", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Float", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Types", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Console", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "List", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Result", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "TypedArray2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Global", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Exn", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Typed_array", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Dict", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Internal", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "String2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqNullable", "kind": 12, "detail": "('a, nullable('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefinedToOption", "kind": 12, "detail": "undefined('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_gt", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqNull", "kind": 12, "detail": "('a, null('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_ge", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log3", "kind": 12, "detail": "('a, 'b, 'c) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log", "kind": 12, "detail": "'a => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_lt", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log4", "kind": 12, "detail": "('a, 'b, 'c, 'd) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "testAny", "kind": 12, "detail": "'a => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_le", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqUndefined", "kind": 12, "detail": "('a, undefined('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "toOption", "kind": 12, "detail": "nullable('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "logMany", "kind": 12, "detail": "array('a) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log2", "kind": 12, "detail": "('a, 'b) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "isNullable", "kind": 12, "detail": "nullable('a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "test", "kind": 12, "detail": "nullable('a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null", "kind": 12, "detail": "null('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "typeof", "kind": 12, "detail": "'a => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefined", "kind": 12, "detail": "undefined('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "nullToOption", "kind": 12, "detail": "null('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "promise", "kind": 22, "detail": "type promise('a, 'e)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null_undefined", "kind": 22, "detail": "type null_undefined('a) = nullable('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "nullable", "kind": 22, "detail": "type nullable('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "t", "kind": 22, "detail": "type t('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null", "kind": 22, "detail": "type null('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefined", "kind": 22, "detail": "type undefined('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 45422
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 117, "character": 2}, "end": {"line": 117, "character": 4}}, "message": "Error: Syntax error", "severity": 1}, {"range": {"start": {"line": 116, "character": 2}, "end": {"line": 118, "character": 15}}, "message": "Error: Unbound value Js.deleteModal", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":87},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.log(\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":116,"character":9}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00500679016113ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 256591
Signature help lident Js.log
[ref] Getting global Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
[ref] Getting for 1096 in log
[ref] Trying for declared Value 1096 in file file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
[ref] Yes!! got it
Found a type signature
Sending response {"id": 23, "jsonrpc": "2.0", "result": {"activeParameter": 0, "signatures": [{"label": "'a => unit", "documentation": {"kind": "markdown", "value": "```\n'a => unit\n```\n\n<root>/ui/node_modules/bs-platform/lib/ocaml/js.ml"}, "parameters": [{"label": "", "documentation": "'a"}]}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 150, "character": 5}, "end": {"line": 150, "character": 6}}, "message": "Error: Unclosed \"(\" (opened line 117, column 8)", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":88},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.log(s\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 45529
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 117, "character": 2}, "end": {"line": 117, "character": 4}}, "message": "Error: Unclosed \"(\" (opened line 117, column 8)", "severity": 1}, {"range": {"start": {"line": 116, "character": 9}, "end": {"line": 147, "character": 14}}, "message": "Error: The value s is not an instance variable", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":116,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 24, "jsonrpc": "2.0", "result": [{"label": "setInputValue", "kind": 12, "detail": "string => string => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:60"}, {"label": "state", "kind": 12, "detail": "Boxpacker.AppState.state", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:59"}, {"label": "s", "kind": 12, "detail": "string => React.element", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re:1"}, {"label": "selection", "kind": 22, "detail": "type selection = | Nothing | Selected(id) | Editing(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:5"}, {"label": "state", "kind": 22, "detail": "type state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:10"}, {"label": "selectedContainer", "kind": 5, "detail": "selectedContainer: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "selectedItem", "kind": 5, "detail": "selectedItem: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "sin", "kind": 12, "detail": "float => float", "documentation": "Sine. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:417"}, {"label": "stdout", "kind": 12, "detail": "out_channel", "documentation": "The standard output for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:811"}, {"label": "set_binary_mode_in", "kind": 12, "detail": "(in_channel, bool) => unit", "documentation": "`set_binary_mode_in ic true` sets the channel `ic` to binary mode: no translations take place during input. `set_binary_mode_out ic false` sets the channel `ic` to text mode: depending on the operating system, some translations may take place during input. For instance, under Windows, end-of-lines will be translated from `\\r\\n` to `\\n`. This function has no effect under operating systems that do not distinguish between text mode and binary mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1143"}, {"label": "stdin", "kind": 12, "detail": "in_channel", "documentation": "The standard input for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:808"}, {"label": "string_of_int", "kind": 12, "detail": "int => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:723"}, {"label": "stderr", "kind": 12, "detail": "out_channel", "documentation": "The standard error output for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:814"}, {"label": "snd", "kind": 12, "detail": "(('a, 'b)) => 'b", "documentation": "Return the second component of a pair.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:784"}, {"label": "string_of_format", "kind": 12, "detail": "format6(\n  'a,\n  'b,\n  'c,\n  'd,\n  'e,\n  'f\n) => string", "documentation": "Converts a format string into a string.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1284"}, {"label": "seek_in", "kind": 12, "detail": "(in_channel, int) => unit", "documentation": "`seek_in chan pos` sets the current reading position to `pos` for channel `chan`. This works only for regular files. On files of other kinds, the behavior is unspecified.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1118"}, {"label": "string_of_float", "kind": 12, "detail": "float => string", "documentation": "Return the string representation of a floating-point number.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:753"}, {"label": "sqrt", "kind": 12, "detail": "float => float", "documentation": "Square root.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:390"}, {"label": "set_binary_mode_out", "kind": 12, "detail": "(out_channel, bool) => unit", "documentation": "`set_binary_mode_out oc true` sets the channel `oc` to binary mode: no translations take place during output. `set_binary_mode_out oc false` sets the channel `oc` to text mode: depending on the operating system, some translations may take place during output. For instance, under Windows, end-of-lines will be translated from `\\n` to `\\r\\n`. This function has no effect under operating systems that do not distinguish between text mode and binary mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1027"}, {"label": "string_of_bool", "kind": 12, "detail": "bool => string", "documentation": "Return the string representation of a boolean. As the returned values may be shared, the user should not modify them directly.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:705"}, {"label": "succ", "kind": 12, "detail": "int => int", "documentation": "`succ x` is `x + 1`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:258"}, {"label": "sinh", "kind": 12, "detail": "float => float", "documentation": "Hyperbolic sine. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:451"}, {"label": "seek_out", "kind": 12, "detail": "(out_channel, int) => unit", "documentation": "`seek_out chan pos` sets the current writing position to `pos` for channel `chan`. This works only for regular files. On files of other kinds \\(such as terminals, pipes and sockets\\), the behavior is unspecified.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1000"}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":89},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.log(state.\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":116,"character":15},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Completing for state<.>
suffix :
-------------- Looking for state
Found it! state
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending response {"id": 25, "jsonrpc": "2.0", "result": [{"label": "containers", "kind": 5, "detail": "containers: Boxpacker.Types.Container.t array\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "items", "kind": 5, "detail": "items: Boxpacker.Types.Item.t array\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "selectedContainer", "kind": 5, "detail": "selectedContainer: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "selectedItem", "kind": 5, "detail": "selectedItem: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 45615
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 117, "character": 2}, "end": {"line": 117, "character": 4}}, "message": "Error: Syntax error", "severity": 1}, {"range": {"start": {"line": 119, "character": 9}, "end": {"line": 119, "character": 18}}, "message": "Error: Unbound record field className", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"completionItem/resolve","params":{"label":"selectedItem","kind":5,"detail":"selectedItem: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}","documentation":"No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0","data":{}}}
[server] Got a method completionItem/resolve
[server] processing took 0.0100135803223ms
Sending response {"id": 26, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":90},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.log(state.selectedItem)\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":91},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.log(state.selectedItem);\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":91}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m

  Warning number 27
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 83:40-49
  
  81 ┆   );
  82 ┆ 
  83 ┆ let onEdit = (id: AppState.id, name, resetInput) => {
  84 ┆   let updateItem = Js.Dict.empty();
  85 ┆   Js.Dict.set(updateItem, "id", Js.Json.number(float_of_int(id)));
  
  unused variable resetInput.
  
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":4},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => \n  {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":5},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => \n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":6},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20562
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 68, "character": 2}, "end": {"line": 68, "character": 3}}, "message": "Error: syntax error, consider adding a `;' before", "severity": 1}, {"range": {"start": {"line": 63, "character": 4}, "end": {"line": 66, "character": 5}}, "message": "Error: This expression has type state\n       This is not a function; it cannot be applied.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":7},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n    \n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20562
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 69, "character": 2}, "end": {"line": 69, "character": 3}}, "message": "Error: syntax error, consider adding a `;' before", "severity": 1}, {"range": {"start": {"line": 63, "character": 4}, "end": {"line": 66, "character": 5}}, "message": "Error: This expression has type state\n       This is not a function; it cannot be applied.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":8},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":9},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      \n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":10},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      J\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":7},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00596046447754ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Sending response {"id": 27, "jsonrpc": "2.0", "result": [{"label": "Json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_encode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_decode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_internalOO", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_promise", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_global", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_float", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_cast", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_types", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_option", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_result", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_int", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_mapperRt", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_date", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_math", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_vector", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_re", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_exn", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_console", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_list", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_obj", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_dict", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20010
type error here File "", line 64, characters 6-7:
Error: Unbound constructor J
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 7}}, "message": "Error: Unbound constructor J", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":11},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Jd.\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Completing for Jd<.>
normal Jd.
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Getting module Jd
No path for module Jd
Sending response {"id": 28, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":12},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Jd.l\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":10},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Completing for Jd<.>l
normal Jd.l
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Getting module Jd
No path for module Jd
Sending response {"id": 29, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":13},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Jd.\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Completing for Jd<.>
normal Jd.
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Getting module Jd
No path for module Jd
Sending response {"id": 30, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":14},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":8},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Sending response {"id": 31, "jsonrpc": "2.0", "result": [{"label": "Json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_encode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Json_decode", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_internalOO", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_promise", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_global", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_float", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_cast", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_types", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_option", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_result", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_int", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_mapperRt", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_null", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_string", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_date", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_math", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_vector", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_re", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_undefined", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_exn", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_console", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_list", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_obj", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_typed_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_dict", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_array2", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Js_json", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":15},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Completing for Js<.>
normal Js.
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Getting module Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
got it
Got the env
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
 -- not capitalized
Sending response {"id": 32, "jsonrpc": "2.0", "result": [{"label": "Date", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Re", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Vector", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Math", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Promise", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Array", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Null", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Int", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Option", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Nullable", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Json", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "String", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Array2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Null_undefined", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "MapperRt", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Obj", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Undefined", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Float", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Types", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Console", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "List", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Result", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "TypedArray2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Global", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Exn", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Typed_array", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Dict", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "Internal", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "String2", "kind": 9, "detail": "module", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqNullable", "kind": 12, "detail": "('a, nullable('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefinedToOption", "kind": 12, "detail": "undefined('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_gt", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqNull", "kind": 12, "detail": "('a, null('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_ge", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log3", "kind": 12, "detail": "('a, 'b, 'c) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log", "kind": 12, "detail": "'a => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_lt", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log4", "kind": 12, "detail": "('a, 'b, 'c, 'd) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "testAny", "kind": 12, "detail": "'a => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "unsafe_le", "kind": 12, "detail": "('a, 'a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "eqUndefined", "kind": 12, "detail": "('a, undefined('a)) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "toOption", "kind": 12, "detail": "nullable('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "logMany", "kind": 12, "detail": "array('a) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log2", "kind": 12, "detail": "('a, 'b) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "isNullable", "kind": 12, "detail": "nullable('a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "test", "kind": 12, "detail": "nullable('a) => bool", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null", "kind": 12, "detail": "null('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "typeof", "kind": 12, "detail": "'a => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefined", "kind": 12, "detail": "undefined('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "nullToOption", "kind": 12, "detail": "null('a) => option('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "promise", "kind": 22, "detail": "type promise('a, 'e)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null_undefined", "kind": 22, "detail": "type null_undefined('a) = nullable('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "nullable", "kind": 22, "detail": "type nullable('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "t", "kind": 22, "detail": "type t('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "null", "kind": 22, "detail": "type null('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "undefined", "kind": 22, "detail": "type undefined('a)", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}, {"range": {"start": {"line": 62, "character": 38}, "end": {"line": 68, "character": 3}}, "message": "Warning 33: unused open Js.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":16},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.lof\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20010
type error here File "", line 64, characters 6-12:
Error: Unbound value Js.lof
Hint: Did you mean log?
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 12}}, "message": "Error: Unbound value Js.lof\nHint: Did you mean log?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":17},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.lo\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":18},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Completing for Js<.>log
normal Js.log
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
Looking for env in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Getting module Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
got it
Got the env
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
 -- not capitalized
Sending response {"id": 33, "jsonrpc": "2.0", "result": [{"label": "log3", "kind": 12, "detail": "('a, 'b, 'c) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log", "kind": 12, "detail": "'a => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log4", "kind": 12, "detail": "('a, 'b, 'c, 'd) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "logMany", "kind": 12, "detail": "array('a) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}, {"label": "log2", "kind": 12, "detail": "('a, 'b) => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml:1"}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":19},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log(\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":13}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00309944152832ms
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 21205
Signature help lident Js.log
[ref] Getting global Js
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.cmi src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
[ref] Getting for 1096 in log
[ref] Trying for declared Value 1096 in file file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/js.ml
[ref] Yes!! got it
Found a type signature
Sending response {"id": 34, "jsonrpc": "2.0", "result": {"activeParameter": 0, "signatures": [{"label": "'a => unit", "documentation": {"kind": "markdown", "value": "```\n'a => unit\n```\n\n<root>/ui/node_modules/bs-platform/lib/ocaml/js.ml"}, "parameters": [{"label": "", "documentation": "'a"}]}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 68, "character": 2}, "end": {"line": 68, "character": 3}}, "message": "Error: Unclosed \"(\" (opened line 64, column 12)", "severity": 1}, {"range": {"start": {"line": 62, "character": 38}, "end": {"line": 67, "character": 5}}, "message": "Error: This expression has type unit but an expression was expected of type\n         state", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":20},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log(\"\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20395
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 63, "character": 13}, "end": {"line": 63, "character": 14}}, "message": "Error: String literal not terminated", "severity": 1}, {"range": {"start": {"line": 62, "character": 38}, "end": {"line": 75, "character": 2}}, "message": "Error: This expression has type unit but an expression was expected of type\n         state", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":21},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log(\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":22},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log(s\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re"},"position":{"line":63,"character":14},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Opens folkz > 1 Types
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
Sending response {"id": 35, "jsonrpc": "2.0", "result": [{"label": "state", "kind": 12, "detail": "state", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:38"}, {"label": "selection", "kind": 12, "detail": "selection", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:45"}, {"label": "selection", "kind": 12, "detail": "selection", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:63"}, {"label": "selection", "kind": 22, "detail": "type selection = | Nothing | Selected(id) | Editing(id)\n", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:5"}, {"label": "state", "kind": 22, "detail": "type state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:10"}, {"label": "selectedContainer", "kind": 5, "detail": "selectedContainer: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "selectedItem", "kind": 5, "detail": "selectedItem: selection\n\ntype state = {\n  containers: array(Boxpacker.Types.Container.t),\n  items: array(Boxpacker.Types.Item.t),\n  selectedContainer: selection,\n  selectedItem: selection\n}", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re:0"}, {"label": "sin", "kind": 12, "detail": "float => float", "documentation": "Sine. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:417"}, {"label": "stdout", "kind": 12, "detail": "out_channel", "documentation": "The standard output for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:811"}, {"label": "set_binary_mode_in", "kind": 12, "detail": "(in_channel, bool) => unit", "documentation": "`set_binary_mode_in ic true` sets the channel `ic` to binary mode: no translations take place during input. `set_binary_mode_out ic false` sets the channel `ic` to text mode: depending on the operating system, some translations may take place during input. For instance, under Windows, end-of-lines will be translated from `\\r\\n` to `\\n`. This function has no effect under operating systems that do not distinguish between text mode and binary mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1143"}, {"label": "stdin", "kind": 12, "detail": "in_channel", "documentation": "The standard input for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:808"}, {"label": "string_of_int", "kind": 12, "detail": "int => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:723"}, {"label": "stderr", "kind": 12, "detail": "out_channel", "documentation": "The standard error output for the process.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:814"}, {"label": "snd", "kind": 12, "detail": "(('a, 'b)) => 'b", "documentation": "Return the second component of a pair.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:784"}, {"label": "string_of_format", "kind": 12, "detail": "format6(\n  'a,\n  'b,\n  'c,\n  'd,\n  'e,\n  'f\n) => string", "documentation": "Converts a format string into a string.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1284"}, {"label": "seek_in", "kind": 12, "detail": "(in_channel, int) => unit", "documentation": "`seek_in chan pos` sets the current reading position to `pos` for channel `chan`. This works only for regular files. On files of other kinds, the behavior is unspecified.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1118"}, {"label": "string_of_float", "kind": 12, "detail": "float => string", "documentation": "Return the string representation of a floating-point number.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:753"}, {"label": "sqrt", "kind": 12, "detail": "float => float", "documentation": "Square root.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:390"}, {"label": "set_binary_mode_out", "kind": 12, "detail": "(out_channel, bool) => unit", "documentation": "`set_binary_mode_out oc true` sets the channel `oc` to binary mode: no translations take place during output. `set_binary_mode_out oc false` sets the channel `oc` to text mode: depending on the operating system, some translations may take place during output. For instance, under Windows, end-of-lines will be translated from `\\n` to `\\r\\n`. This function has no effect under operating systems that do not distinguish between text mode and binary mode.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1027"}, {"label": "string_of_bool", "kind": 12, "detail": "bool => string", "documentation": "Return the string representation of a boolean. As the returned values may be shared, the user should not modify them directly.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:705"}, {"label": "succ", "kind": 12, "detail": "int => int", "documentation": "`succ x` is `x + 1`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:258"}, {"label": "sinh", "kind": 12, "detail": "float => float", "documentation": "Hyperbolic sine. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:451"}, {"label": "seek_out", "kind": 12, "detail": "(out_channel, int) => unit", "documentation": "`seek_out chan pos` sets the current writing position to `pos` for channel `chan`. This works only for regular files. On files of other kinds \\(such as terminals, pipes and sockets\\), the behavior is unspecified.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1000"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20277
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 68, "character": 2}, "end": {"line": 68, "character": 3}}, "message": "Error: Unclosed \"(\" (opened line 64, column 12)", "severity": 1}, {"range": {"start": {"line": 63, "character": 13}, "end": {"line": 63, "character": 14}}, "message": "Error: Unbound value s", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":23},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log(selection)\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20277
type error here File "", line 64, characters 6-12:
Error: This function has type 'a => unit
       It is applied to too many arguments; maybe you forgot a `;'.
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 12}}, "message": "Error: This function has type 'a => unit\n       It is applied to too many arguments; maybe you forgot a `;'.", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":24},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      Js.log(selection);\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":24}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":92},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":93},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  Js.log(state.selectedItem);\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":94},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":95},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~anLoad=sson => {\n          dson->gtem.hecoder->kddItem->lispatch\n          qgnore(woggleItemSelection(eelected(rd)));\n          ()\n      },\n      ~tnError=yrror => us.iog(orror),\n      ~pata=zs.xson.ctringify(vs.bson.nbject_(mpdateItem)),\n      ~fa=fs,\n    );\n  };\nfd\n  fgt fhSubmit = (fkme, jasetInput) => {\n    jst jdwItem = jg.jhct.jkpty();\n    jl.jqct.jwt(jewItem, \"jrme\", jt.jyon.juring(jime));\n    jo.jpct.jzt(jxwItem, \"jctal\", jv.jbon.jnmber(jmjf);\n    jjt j;=\n      ;ar.;sst(\n        ~;ddpoint=;gem.;hdpoint,\n        ~;kta=;l.;qon.;wringify(;e.;ron.;tject_(;ywItem)),\n        ~;uLoad=;ion => {\n            ;oon->;pem.;zcoder->;xdItem->;cspatch;\n            ;vsetInput();\n        },\n        ~;bError=;nror => ;m.;fg(;jror),\n      );\n    ();\n  };\n;;\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 36918
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 102, "character": 54}, "end": {"line": 102, "character": 55}}, "message": "Error: Unclosed \"{\" (opened line 100, column 39)", "severity": 1}, {"range": {"start": {"line": 88, "character": 14}, "end": {"line": 92, "character": 7}}, "message": "Error: The function applied to this argument has type\n         (~onLoad: Boxpacker.Xhr.response => unit, ~onError: string => unit,\n         ~data: string, ~id: int, unit) => unit\nThis argument cannot be applied with label ~anLoad", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":96},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          ignore(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":97},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          (ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":98},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          d(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":90,"character":11},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00286102294922ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 36, "jsonrpc": "2.0", "result": [{"label": "deleteButton", "kind": 12, "detail": "Boxpacker.AppState.id => React.element", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:65"}, {"label": "deleteModal", "kind": 12, "detail": "React.element", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:65"}, {"label": "dispatch", "kind": 12, "detail": "Boxpacker.AppState.action => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re:59"}, {"label": "decr", "kind": 12, "detail": "ref(int) => unit", "documentation": "Decrement the integer contained in the given reference. Equivalent to `fun r -> r := pred !r`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1196"}, {"label": "do_at_exit", "kind": 12, "detail": "unit => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1339"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 37627
type error here File "", line 91, characters 10-11:
Error: Unbound value d
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 90, "character": 10}, "end": {"line": 90, "character": 11}}, "message": "Error: Unbound value d", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":99},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n          ()\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":99}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":100},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":100}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":100}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m

  Warning number 27
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 83:40-49
  
  81 ┆   );
  82 ┆ 
  83 ┆ let onEdit = (id: AppState.id, name, resetInput) => {
  84 ┆   let updateItem = Js.Dict.empty();
  85 ┆   Js.Dict.set(updateItem, "id", Js.Json.number(float_of_int(id)));
  
  unused variable resetInput.
  
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 39}, "end": {"line": 82, "character": 49}}, "message": "Warning 27: unused variable resetInput.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":101},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 253576
type error here File "", line 136, characters 16-22:
Error: This expression has type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string) => unit,
           "selected": bool, "total": option(int)}
       but an expression was expected of type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
           "selected": bool, "total": option(int)}
       Types for method onEdit are incompatible
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 135, "character": 16}, "end": {"line": 135, "character": 22}}, "message": "Error: This expression has type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       but an expression was expected of type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string, unit => unit) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       Types for method onEdit are incompatible", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":101}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
FAILED: src/ItemsPanel-Boxpacker.cmj src/ItemsPanel-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/ItemsPanel.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/ItemsPanel-Boxpacker.cmj src/ItemsPanel.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 136:17-22
  
  134 ┆ key={string_of_int(item.id)}
  135 ┆ className=Styles.li>
  136 ┆ <Entity
  137 ┆   name={item.name}
  138 ┆   id={item.id}
  
  This value might need to be wrapped in a function that takes an extra
  parameter of type unit => unit
  
  Here's the original error message
  This has type:
    {. "displayOnEntityClick": Boxpacker.AppState.id =>
                               ReasonReact.reactElement,
      "edit": bool, "id": Boxpacker.AppState.id, "name": string,
      "onEdit": (Boxpacker.AppState.id, string) => unit, "selected": 
      bool, "total": option(int)}
  But somewhere wanted:
    {. "displayOnEntityClick": Boxpacker.AppState.id =>
                               ReasonReact.reactElement,
      "edit": bool, "id": Boxpacker.AppState.id, "name": string,
      "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
      "selected": bool, "total": option(int)}
  Types for method onEdit are incompatible
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 253576
type error here File "", line 136, characters 16-22:
Error: This expression has type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string) => unit,
           "selected": bool, "total": option(int)}
       but an expression was expected of type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
           "selected": bool, "total": option(int)}
       Types for method onEdit are incompatible
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 135, "character": 16}, "end": {"line": 135, "character": 22}}, "message": "Error: This expression has type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       but an expression was expected of type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string, unit => unit) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       Types for method onEdit are incompatible", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":25},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n    {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":26},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n    }\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.cmt
Size 20992
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 68, "character": 2}, "end": {"line": 68, "character": 3}}, "message": "Error: syntax error, consider adding a `;' before", "severity": 1}, {"range": {"start": {"line": 37, "character": 33}, "end": {"line": 71, "character": 5}}, "message": "Warning 8: this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\nDeleteItem _", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":27},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n  }\n\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":27}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
FAILED: src/ItemsPanel-Boxpacker.cmj src/ItemsPanel-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/ItemsPanel.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/ItemsPanel-Boxpacker.cmj src/ItemsPanel.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 136:17-22
  
  134 ┆ key={string_of_int(item.id)}
  135 ┆ className=Styles.li>
  136 ┆ <Entity
  137 ┆   name={item.name}
  138 ┆   id={item.id}
  
  This value might need to be wrapped in a function that takes an extra
  parameter of type unit => unit
  
  Here's the original error message
  This has type:
    {. "displayOnEntityClick": Boxpacker.AppState.id =>
                               ReasonReact.reactElement,
      "edit": bool, "id": Boxpacker.AppState.id, "name": string,
      "onEdit": (Boxpacker.AppState.id, string) => unit, "selected": 
      bool, "total": option(int)}
  But somewhere wanted:
    {. "displayOnEntityClick": Boxpacker.AppState.id =>
                               ReasonReact.reactElement,
      "edit": bool, "id": Boxpacker.AppState.id, "name": string,
      "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
      "selected": bool, "total": option(int)}
  Types for method onEdit are incompatible
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 253576
type error here File "", line 136, characters 16-22:
Error: This expression has type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string) => unit,
           "selected": bool, "total": option(int)}
       but an expression was expected of type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
           "selected": bool, "total": option(int)}
       Types for method onEdit are incompatible
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 135, "character": 16}, "end": {"line": 135, "character": 22}}, "message": "Error: This expression has type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       but an expression was expected of type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string, unit => unit) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       Types for method onEdit are incompatible", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":28},"contentChanges":[{"text":"open Types;\n\ntype id = int;\n\ntype selection =\n  | Nothing\n  | Selected(id)\n  | Editing(id);\n\ntype state = {\n  containers: array(Container.t),\n  items: array(Item.t),\n  selectedContainer: selection,\n  selectedItem: selection,\n};\n\ntype action =\n  | LoadContainers(array(Container.t))\n  | AddContainer(Container.t)\n  | ToggleContainerSelection(selection)\n  | EditContainerName(id, string)\n  | DeleteContainer(id)\n  | LoadItems(array(Item.t))\n  | AddItem(Item.t)\n  | ToggleItemSelection(selection)\n  | DeleteItem(id);\n\nlet toggleSelection =\n    (selectedEntity: selection, selection: selection): selection => {\n  switch (selectedEntity, selection) {\n  | (Editing(selectedId), Editing(clickedId))\n  | (Selected(selectedId), Selected(clickedId)) =>\n    selectedId === clickedId ? Nothing : selection\n  | _ => selection\n  };\n};\n\nlet reducer = (state, action) => {\n  switch (action) {\n  | LoadContainers(containers) => {...state, containers}\n  | AddContainer(newContainer) => {\n      ...state,\n      containers: Array.append(state.containers, [|newContainer|]),\n    }\n  | ToggleContainerSelection(selection) => {\n      ...state,\n      selectedContainer: toggleSelection(state.selectedContainer, selection),\n    }\n  | EditContainerName(id, name) => state\n\n  | DeleteContainer(id) => {\n      ...state,\n      containers:\n        Belt.Array.keep(state.containers, container => container.id != id),\n    }\n  | LoadItems(items) => {...state, items}\n  | AddItem(newItem) => {\n      ...state,\n      items:\n        state.items->Belt.Array.keep(item => item.id !== newItem.id)\n        |> Array.append([|newItem|]),\n    }\n  | ToggleItemSelection(selection) => {\n      ...state,\n      selectedItem: toggleSelection(state.selectedItem, selection),\n  }\n  | DeleteItem(id) => {\n      ...state,\n      items: Belt.Array.keep(state.items, item => item.id != id),\n    }\n  };\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re","version":28}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
FAILED: src/ItemsPanel-Boxpacker.cmj src/ItemsPanel-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/ItemsPanel.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/ItemsPanel-Boxpacker.cmj src/ItemsPanel.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re 136:17-22
  
  134 ┆ key={string_of_int(item.id)}
  135 ┆ className=Styles.li>
  136 ┆ <Entity
  137 ┆   name={item.name}
  138 ┆   id={item.id}
  
  This value might need to be wrapped in a function that takes an extra
  parameter of type unit => unit
  
  Here's the original error message
  This has type:
    {. "displayOnEntityClick": Boxpacker.AppState.id =>
                               ReasonReact.reactElement,
      "edit": bool, "id": Boxpacker.AppState.id, "name": string,
      "onEdit": (Boxpacker.AppState.id, string) => unit, "selected": 
      bool, "total": option(int)}
  But somewhere wanted:
    {. "displayOnEntityClick": Boxpacker.AppState.id =>
                               ReasonReact.reactElement,
      "edit": bool, "id": Boxpacker.AppState.id, "name": string,
      "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
      "selected": bool, "total": option(int)}
  Types for method onEdit are incompatible
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/AppState-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re", "diagnostics": [{"range": {"start": {"line": 48, "character": 22}, "end": {"line": 48, "character": 24}}, "message": "Warning 27: unused variable id.", "severity": 2}, {"range": {"start": {"line": 48, "character": 26}, "end": {"line": 48, "character": 30}}, "message": "Warning 27: unused variable name.", "severity": 2}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.cmt
Size 253576
type error here File "", line 136, characters 16-22:
Error: This expression has type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string) => unit,
           "selected": bool, "total": option(int)}
       but an expression was expected of type
         {. "displayOnEntityClick": Boxpacker.AppState.id =>
                                    ReasonReact.reactElement,
           "edit": bool, "id": Boxpacker.AppState.id, "name": string,
           "onEdit": (Boxpacker.AppState.id, string, unit => unit) => unit,
           "selected": bool, "total": option(int)}
       Types for method onEdit are incompatible
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": [{"range": {"start": {"line": 135, "character": 16}, "end": {"line": 135, "character": 22}}, "message": "Error: This expression has type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       but an expression was expected of type\n         {. \"displayOnEntityClick\": Boxpacker.AppState.id =>\n                                    ReasonReact.reactElement,\n           \"edit\": bool, \"id\": Boxpacker.AppState.id, \"name\": string,\n           \"onEdit\": (Boxpacker.AppState.id, string, unit => unit) => unit,\n           \"selected\": bool, \"total\": option(int)}\n       Types for method onEdit are incompatible", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":102},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, ) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":103},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":40},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 37, "jsonrpc": "2.0", "result": [{"label": "__LOC_OF__", "kind": 12, "detail": "'a => (string, 'a)", "documentation": "`__LOC_OF__ expr` returns a pair `(loc, expr)` where `loc` is the location of `expr` in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:199"}, {"label": "__MODULE__", "kind": 12, "detail": "string", "documentation": "`__MODULE__` returns the module name of the file being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:184"}, {"label": "__LINE__", "kind": 12, "detail": "int", "documentation": "`__LINE__` returns the line number at which this expression appears in the file currently being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:178"}, {"label": "__LINE_OF__", "kind": 12, "detail": "'a => (int, 'a)", "documentation": "`__LINE__ expr` returns a pair `(line, expr)`, where `line` is the line number at which the expression `expr` appears in the file currently being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:207"}, {"label": "__POS_OF__", "kind": 12, "detail": "'a => ((string, int, int, int), 'a)", "documentation": "`__POS_OF__ expr` returns a pair `(loc,expr)`, where `loc` is a tuple `(file,lnum,cnum,enum)` corresponding to the location at which the expression `expr` appears in the file currently being parsed by the compiler. `file` is the current filename, `lnum` the line number, `cnum` the character position in the line and `enum` the last character position in the line.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:214"}, {"label": "__LOC__", "kind": 12, "detail": "string", "documentation": "`__LOC__` returns the location at which this expression appears in the file currently being parsed by the compiler, with the standard error format of OCaml: \"File %S, line %d, characters %d-%d\".\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:165"}, {"label": "__POS__", "kind": 12, "detail": "(string, int, int, int)", "documentation": "`__POS__` returns a tuple `(file,lnum,cnum,enum)`, corresponding to the location at which this expression appears in the file currently being parsed by the compiler. `file` is the current filename, `lnum` the line number, `cnum` the character position in the line and `enum` the last character position in the line.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:190"}, {"label": "__FILE__", "kind": 12, "detail": "string", "documentation": "`__FILE__` returns the name of the file currently being parsed by the compiler.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:172"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":103}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":104},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _r) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":41},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00715255737305ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 38, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":105},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _res) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":43},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 39, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":106},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _rese) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":44},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00905990600586ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 40, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":107},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _reset) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":45},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 41, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":108},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _resetI) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":46},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00381469726562ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 42, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":109},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _resetIn) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":47},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 43, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":110},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _resetInp) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":48},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 44, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":111},"contentChanges":[{"text":"open AppState;\nopen Types;\nopen Utils;\n\nmodule Styles = {\n  open Css;\n\n  let wrapper =\n    style([\n      5->px->borderRadius,\n      300->px->width,\n      5->px->padding,\n      1->px->border(solid, black),\n    ]);\n\n  let inputItem = style([10->px->padding]);\n\n  let ul = style([0->px->padding]);\n\n  let li = style([cursor(`pointer), listStyleType(none)]);\n};\n\ntype delete =\n  | Delete(id, string)\n  | NoDelete;\n\nlet useDeleteComponents = (~dispatch) => {\n  let (showDelete, setShowDelete) = React.useState(_ => NoDelete);\n    let onDeleteClick = (id, event) => {\n    ReactEvent.Mouse.stopPropagation(event);\n    setShowDelete(_ => Delete(id, \"Are you sure you want to delete?\"));\n  };\n\n  let confirmDeletion = (id, _) => {\n    Xhr.delete(\n      ~endpoint=Item.endpoint,\n      ~onLoad=() => dispatch(DeleteItem(id)),\n      ~onError=error => Js.log(error),\n      ~id,\n    );\n  };\n\n  let button = id => <DeleteIcon onClick={onDeleteClick(id)} />;\n\n  let modal =\n    fun\n    | Delete(id, message) =>\n      <DeleteModal\n        closeModal={_ => setShowDelete(_ => NoDelete)}\n        message\n        onConfirmDeletion={confirmDeletion(id)}\n      />\n    | NoDelete => React.null;\n\n  (button, modal(showDelete));\n};\n\n[@react.component]\nlet make = (~state, ~dispatch) => {\n  let (inputValue, setInputValue) = React.useState(_ => \"\");\n  let valueCatcher = value => {\n    setInputValue(_ => value);\n    value;\n  };\n  let (deleteButton, deleteModal) = useDeleteComponents(~dispatch);\n\n  React.useEffect0(() => {\n    let abort =\n      Xhr.get(\n        ~endpoint=Item.endpoint,\n        ~onLoad=json => json->Item.array_decoder->LoadItems->dispatch,\n        ~onError=error => Js.log(error),\n      );\n    Some(abort);\n  });\n\n  let onClick = id =>\n    Utils.DoubleClick.handler(\n      selection => dispatch(ToggleItemSelection(selection)),\n      id,\n    );\n\n  let onEdit = (id: AppState.id, name, _resetInput) => {\n    let updateItem = Js.Dict.empty();\n    Js.Dict.set(updateItem, \"id\", Js.Json.number(float_of_int(id)));\n    Js.Dict.set(updateItem, \"name\", Js.Json.string(name));\n    let _ = Xhr.patch(\n      ~endpoint=Item.endpoint,\n      ~onLoad=json => {\n          json->Item.decoder->AddItem->dispatch\n          dispatch(ToggleItemSelection(Selected(id)));\n      },\n      ~onError=error => Js.log(error),\n      ~data=Js.Json.stringify(Js.Json.object_(updateItem)),\n      ~id=id,\n    );\n  };\n\n  let onSubmit = (name, resetInput) => {\n    let newItem = Js.Dict.empty();\n    Js.Dict.set(newItem, \"name\", Js.Json.string(name));\n    Js.Dict.set(newItem, \"total\", Js.Json.number(1.0));\n    let _ =\n      Xhr.post(\n        ~endpoint=Item.endpoint,\n        ~data=Js.Json.stringify(Js.Json.object_(newItem)),\n        ~onLoad=json => {\n            json->Item.decoder->AddItem->dispatch;\n            resetInput();\n        },\n        ~onError=error => Js.log(error),\n      );\n    ();\n  };\n\n  <>\n    deleteModal\n    <div className=Styles.wrapper>\n      <div className=Styles.inputItem>\n        <InputBox onSubmit valueCatcher />\n      </div>\n      <ul className=Styles.ul>\n        {state.items\n         ->Belt.Array.keep(item => Js.String.includes(inputValue, item.name))\n         ->mapElementArray(item => {\n             let (selected, edit) =\n               switch (state.selectedItem) {\n               | Selected(id) => (id === item.id, false)\n               | Editing(id) => (false, id === item.id)\n               | _ => (false, false)\n               };\n             <li\n               onClick={_ => onClick(item.id)}\n               key={string_of_int(item.id)}\n               className=Styles.li>\n               <Entity\n                 name={item.name}\n                 id={item.id}\n                 total={item.total}\n                 onEdit\n                 displayOnEntityClick=deleteButton\n                 edit\n                 selected\n               />\n             </li>;\n           })}\n      </ul>\n    </div>\n  </>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re"},"position":{"line":82,"character":50},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Opens folkz > 3 AppState ... Types ... Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open AppState.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/AppState-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
resolving open Types.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Types.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Types-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Types.re
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 6 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/AppState.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Types.re
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 45, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/ItemsPanel-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/ItemsPanel.re","version":111}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/2] [34mBuilding[39m [2msrc/ItemsPanel-Boxpacker.cmj[22m
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","languageId":"reason","version":1,"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":2},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input atype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 46, "jsonrpc": "2.0", "result": [{"label": "atan2", "kind": 12, "detail": "(float, float) => float", "documentation": "`atan2 y x` returns the arc tangent of `y /. x`. The signs of `x` and `y` are used to determine the quadrant of the result. Result is in radians and is between `-pi` and `pi`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:435"}, {"label": "asr", "kind": 12, "detail": "(int, int) => int", "documentation": "`n asr m` shifts `n` to the right by `m` bits. This is an arithmetic shift: the sign bit of `n` is replicated. The result is unspecified if `m < 0` or `m >= bitsize`. Right-associative operator at precedence level 8/11.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:337"}, {"label": "abs", "kind": 12, "detail": "int => int", "documentation": "Return the absolute value of the argument. Note that this may be negative if the argument is `min_int`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:295"}, {"label": "asin", "kind": 12, "detail": "float => float", "documentation": "Arc sine. The argument must fall within the range `[-1.0, 1.0]`. Result is in radians and is between `-pi/2` and `pi/2`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:427"}, {"label": "acos", "kind": 12, "detail": "float => float", "documentation": "Arc cosine. The argument must fall within the range `[-1.0, 1.0]`. Result is in radians and is between `0.0` and `pi`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:423"}, {"label": "atan", "kind": 12, "detail": "float => float", "documentation": "Arc tangent. Result is in radians and is between `-pi/2` and `pi/2`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:431"}, {"label": "abs_float", "kind": 12, "detail": "float => float", "documentation": "`abs_float f` returns the absolute value of `f`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:468"}, {"label": "at_exit", "kind": 12, "detail": "unit => unit => unit", "documentation": "Register the given function to be called at program termination time. The functions registered with `at_exit` will be called when the program does any of the following:\n\n-     executes exit\n\n\n-     terminates, either normally or because of an uncaught exception\n\n\n-     executes the C function `caml_shutdown`. The functions are called in 'last in, first out' order: the function most recently added with `at_exit` is called first.\n\n\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1320"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 18-26:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~type_: string=?, ~useMap: string=?,
         ~width: string=?, ~wrap: string=?,
         ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~atype_
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 18}, "end": {"line": 32, "character": 26}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~type_: string=?, ~useMap: string=?,\n         ~width: string=?, ~wrap: string=?,\n         ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~atype_", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":3},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autotype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":4},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFtype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 47, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":5},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFotype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00476837158203ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 48, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":6},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFoctype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0169277191162ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 49, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":7},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFocutype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":19},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 50, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":8},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFocustype_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 51, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 26-34:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~type_: string=?, ~useMap: string=?,
         ~width: string=?, ~wrap: string=?,
         ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autoFocustype_
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 26}, "end": {"line": 32, "character": 34}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~type_: string=?, ~useMap: string=?,\n         ~width: string=?, ~wrap: string=?,\n         ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autoFocustype_", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":9},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFocus type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 11-20:
Error: Unbound value autoFocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 11}, "end": {"line": 32, "character": 20}}, "message": "Error: Unbound value autoFocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":9}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/5] [34mBuilding[39m [2msrc/InputBox-Boxpacker.cmj[22m
FAILED: src/InputBox-Boxpacker.cmj src/InputBox-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/InputBox.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/InputBox-Boxpacker.cmj src/InputBox.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re 33:12-20
  
  31 │ 
  32 │   <div onClick=stop className=Styles.container>
  33 │     <input autoFocus type_="search" placeholder onChange onKeyDown val
       ue onBlur />
  34 │   </div>;
  35 │ };
  
  The value autoFocus can't be found
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 11-20:
Error: Unbound value autoFocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 11}, "end": {"line": 32, "character": 20}}, "message": "Error: Unbound value autoFocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":10},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autofocus type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 11-20:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~useMap: string=?, ~width: string=?,
         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 11}, "end": {"line": 32, "character": 20}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~useMap: string=?, ~width: string=?,\n         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":10}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/5] [34mBuilding[39m [2msrc/InputBox-Boxpacker.cmj[22m
FAILED: src/InputBox-Boxpacker.cmj src/InputBox-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/InputBox.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/InputBox-Boxpacker.cmj src/InputBox.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re 33:12-20
  
  31 │ 
  32 │   <div onClick=stop className=Styles.container>
  33 │     <input autofocus type_="search" placeholder onChange onKeyDown val
       ue onBlur />
  34 │   </div>;
  35 │ };
  
  The function applied to this argument has type
    (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
    ~ariaDisabled: bool=?, ~ariaHidden: bool=?, ~ariaKeyshortcuts: string=?,
    ~ariaLabel: string=?, ~ariaRoledescription: string=?,
    ~ariaExpanded: bool=?, ~ariaLevel: int=?, ~ariaModal: bool=?,
    ~ariaMultiline: bool=?, ~ariaMultiselectable: bool=?,
    ~ariaPlaceholder: string=?, ~ariaReadonly: bool=?, ~ariaRequired: 
    bool=?, ~ariaSelected: bool=?, ~ariaSort: string=?,
    ~ariaValuemax: float=?, ~ariaValuemin: float=?, ~ariaValuenow: float=?,
    ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
    ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
    ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
    ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
    ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
    ~ariaFlowto: string=?, ~ariaLabelledby: string=?, ~ariaOwns: string=?,
    ~ariaPosinset: int=?, ~ariaRowcount: int=?, ~ariaRowindex: int=?,
    ~ariaRowspan: int=?, ~ariaSetsize: int=?, ~defaultChecked: bool=?,
    ~defaultValue: string=?, ~accessKey: string=?, ~className: string=?,
    ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
    ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
    ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
    ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
    ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
    ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
    ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
    ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
    ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
    ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?, ~cols: int=?,
    ~colSpan: int=?, ~content: string=?, ~controls: bool=?,
    ~coords: string=?, ~data: string=?, ~dateTime: string=?,
    ~default: bool=?, ~defer: bool=?, ~disabled: bool=?, ~download: string=?,
    ~encType: string=?, ~form: string=?, ~formAction: string=?,
    ~formTarget: string=?, ~formMethod: string=?, ~headers: string=?,
    ~height: string=?, ~high: int=?, ~href: string=?, ~hrefLang: string=?,
    ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
    ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
    ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
    ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: int=?,
    ~media: string=?, ~mediaGroup: string=?, ~method: string=?, ~min: 
    int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
    ~name: string=?, ~nonce: string=?, ~noValidate: bool=?, ~open_: bool=?,
    ~optimum: int=?, ~pattern: string=?, ~poster: string=?,
    ~preload: string=?, ~radioGroup: string=?, ~readOnly: bool=?,
    ~rel: string=?, ~required: bool=?, ~reversed: bool=?, ~rows: int=?,
    ~rowSpan: int=?, ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
    ~scrolling: string=?, ~selected: bool=?, ~shape: string=?, ~size: 
    int=?, ~sizes: string=?, ~span: int=?, ~src: string=?, ~srcDoc: string=?,
    ~srcLang: string=?, ~srcSet: string=?, ~start: int=?, ~step: float=?,
    ~summary: string=?, ~target: string=?, ~useMap: string=?,
    ~width: string=?, ~wrap: string=?,
    ~onCopy: ReactEvent.Clipboard.t => unit=?,
    ~onCut: ReactEvent.Clipboard.t => unit=?,
    ~onPaste: ReactEvent.Clipboard.t => unit=?,
    ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
    ~onCompositionStart: ReactEvent.Composition.t => unit=?,
    ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
    ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
    ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
    ~onFocus: ReactEvent.Focus.t => unit=?,
    ~onInput: ReactEvent.Form.t => unit=?,
    ~onSubmit: ReactEvent.Form.t => unit=?,
    ~onClick: ReactEvent.Mouse.t => unit=?,
    ~onContextMenu: ReactEvent.Mouse.t => unit=?,
    ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
    ~onDrag: ReactEvent.Mouse.t => unit=?,
    ~onDragEnd: ReactEvent.Mouse.t => unit=?,
    ~onDragEnter: ReactEvent.Mouse.t => unit=?,
    ~onDragExit: ReactEvent.Mouse.t => unit=?,
    ~onDragLeave: ReactEvent.Mouse.t => unit=?,
    ~onDragOver: ReactEvent.Mouse.t => unit=?,
    ~onDragStart: ReactEvent.Mouse.t => unit=?,
    ~onDrop: ReactEvent.Mouse.t => unit=?,
    ~onMouseDown: ReactEvent.Mouse.t => unit=?,
    ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
    ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
    ~onMouseMove: ReactEvent.Mouse.t => unit=?,
    ~onMouseOut: ReactEvent.Mouse.t => unit=?,
    ~onMouseOver: ReactEvent.Mouse.t => unit=?,
    ~onMouseUp: ReactEvent.Mouse.t => unit=?,
    ~onSelect: ReactEvent.Selection.t => unit=?,
    ~onTouchCancel: ReactEvent.Touch.t => unit=?,
    ~onTouchEnd: ReactEvent.Touch.t => unit=?,
    ~onTouchMove: ReactEvent.Touch.t => unit=?,
    ~onTouchStart: ReactEvent.Touch.t => unit=?,
    ~onScroll: ReactEvent.UI.t => unit=?,
    ~onWheel: ReactEvent.Wheel.t => unit=?,
    ~onAbort: ReactEvent.Media.t => unit=?,
    ~onCanPlay: ReactEvent.Media.t => unit=?,
    ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
    ~onDurationChange: ReactEvent.Media.t => unit=?,
    ~onEmptied: ReactEvent.Media.t => unit=?,
    ~onEncrypetd: ReactEvent.Media.t => unit=?,
    ~onEnded: ReactEvent.Media.t => unit=?,
    ~onError: ReactEvent.Media.t => unit=?,
    ~onLoadedData: ReactEvent.Media.t => unit=?,
    ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
    ~onLoadStart: ReactEvent.Media.t => unit=?,
    ~onPause: ReactEvent.Media.t => unit=?,
    ~onPlay: ReactEvent.Media.t => unit=?,
    ~onPlaying: ReactEvent.Media.t => unit=?,
    ~onProgress: ReactEvent.Media.t => unit=?,
    ~onRateChange: ReactEvent.Media.t => unit=?,
    ~onSeeked: ReactEvent.Media.t => unit=?,
    ~onSeeking: ReactEvent.Media.t => unit=?,
    ~onStalled: ReactEvent.Media.t => unit=?,
    ~onSuspend: ReactEvent.Media.t => unit=?,
    ~onTimeUpdate: ReactEvent.Media.t => unit=?,
    ~onVolumeChange: ReactEvent.Media.t => unit=?,
    ~onWaiting: ReactEvent.Media.t => unit=?,
    ~onLoad: ReactEvent.Image.t => unit=?,
    ~onAnimationStart: ReactEvent.Animation.t => unit=?,
    ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
    ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
    ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
    ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
    ~alignmentBaseline: string=?, ~allowReorder: string=?,
    ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
    ~ascent: string=?, ~attributeName: string=?, ~attributeType: string=?,
    ~autoReverse: string=?, ~azimuth: string=?, ~baseFrequency: string=?,
    ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
    ~begin_: string=?, ~bias: string=?, ~by: string=?, ~calcMode: string=?,
    ~capHeight: string=?, ~clip: string=?, ~clipPath: string=?,
    ~clipPathUnits: string=?, ~clipRule: string=?,
    ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
    ~colorProfile: string=?, ~colorRendering: string=?,
    ~contentScriptType: string=?, ~contentStyleType: string=?,
    ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
    ~decelerate: string=?, ~descent: string=?, ~diffuseConstant: string=?,
    ~direction: string=?, ~display: string=?, ~divisor: string=?,
    ~dominantBaseline: string=?, ~dur: string=?, ~dx: string=?,
    ~dy: string=?, ~edgeMode: string=?, ~elevation: string=?,
    ~enableBackground: string=?, ~end_: string=?, ~exponent: string=?,
    ~externalResourcesRequired: string=?, ~fill: string=?,
    ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
    ~filterRes: string=?, ~filterUnits: string=?, ~floodColor: string=?,
    ~floodOpacity: string=?, ~focusable: string=?, ~fontFamily: string=?,
    ~fontSize: string=?, ~fontSizeAdjust: string=?, ~fontStretch: string=?,
    ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
    ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
    ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
    ~glyphOrientationHorizontal: string=?,
    ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
    ~gradientTransform: string=?, ~gradientUnits: string=?,
    ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
    ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
    ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
    ~k2: string=?, ~k3: string=?, ~k4: string=?, ~kernelMatrix: string=?,
    ~kernelUnitLength: string=?, ~kerning: string=?, ~keyPoints: string=?,
    ~keySplines: string=?, ~keyTimes: string=?, ~lengthAdjust: string=?,
    ~letterSpacing: string=?, ~lightingColor: string=?,
    ~limitingConeAngle: string=?, ~local: string=?, ~markerEnd: string=?,
    ~markerHeight: string=?, ~markerMid: string=?, ~markerStart: string=?,
    ~markerUnits: string=?, ~markerWidth: string=?, ~mask: string=?,
    ~maskContentUnits: string=?, ~maskUnits: string=?,
    ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
    ~offset: string=?, ~opacity: string=?, ~operator: string=?,
    ~order: string=?, ~orient: string=?, ~orientation: string=?,
    ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
    ~overflowY: string=?, ~overlinePosition: string=?,
    ~overlineThickness: string=?, ~paintOrder: string=?, ~panose1: string=?,
    ~pathLength: string=?, ~patternContentUnits: string=?,
    ~patternTransform: string=?, ~patternUnits: string=?,
    ~pointerEvents: string=?, ~points: string=?, ~pointsAtX: string=?,
    ~pointsAtY: string=?, ~pointsAtZ: string=?, ~preserveAlpha: string=?,
    ~preserveAspectRatio: string=?, ~primitiveUnits: string=?, ~r: string=?,
    ~radius: string=?, ~refX: string=?, ~refY: string=?,
    ~renderingIntent: string=?, ~repeatCount: string=?, ~repeatDur: string=?,
    ~requiredExtensions: string=?, ~requiredFeatures: string=?,
    ~restart: string=?, ~result: string=?, ~rotate: string=?, ~rx: string=?,
    ~ry: string=?, ~scale: string=?, ~seed: string=?,
    ~shapeRendering: string=?, ~slope: string=?, ~spacing: string=?,
    ~specularConstant: string=?, ~specularExponent: string=?,
    ~speed: string=?, ~spreadMethod: string=?, ~startOffset: string=?,
    ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
    ~stitchTiles: string=?, ~stopColor: string=?, ~stopOpacity: string=?,
    ~strikethroughPosition: string=?, ~strikethroughThickness: string=?,
    ~string: string=?, ~stroke: string=?, ~strokeDasharray: string=?,
    ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
    ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
    ~strokeOpacity: string=?, ~strokeWidth: string=?,
    ~surfaceScale: string=?, ~systemLanguage: string=?,
    ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
    ~textAnchor: string=?, ~textDecoration: string=?, ~textLength: string=?,
    ~textRendering: string=?, ~to_: string=?, ~transform: string=?,
    ~u1: string=?, ~u2: string=?, ~underlinePosition: string=?,
    ~underlineThickness: string=?, ~unicode: string=?,
    ~unicodeBidi: string=?, ~unicodeRange: string=?, ~unitsPerEm: string=?,
    ~vAlphabetic: string=?, ~vHanging: string=?, ~vIdeographic: string=?,
    ~vMathematical: string=?, ~values: string=?, ~vectorEffect: string=?,
    ~version: string=?, ~vertAdvX: string=?, ~vertAdvY: string=?,
    ~vertOriginX: string=?, ~vertOriginY: string=?, ~viewBox: string=?,
    ~viewTarget: string=?, ~visibility: string=?, ~widths: string=?,
    ~wordSpacing: string=?, ~writingMode: string=?, ~x: string=?,
    ~x1: string=?, ~x2: string=?, ~xChannelSelector: string=?,
    ~xHeight: string=?, ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
    ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
    ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
    ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
    ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
    ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
    ~about: string=?, ~datatype: string=?, ~inlist: string=?,
    ~prefix: string=?, ~property: string=?, ~resource: string=?,
    ~typeof: string=?, ~vocab: string=?,
    ~dangerouslySetInnerHTML: {. "__html": string}=?,
    ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 11-20:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~useMap: string=?, ~width: string=?,
         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 11}, "end": {"line": 32, "character": 20}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~useMap: string=?, ~width: string=?,\n         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":11},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autofocus= type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 27}, "end": {"line": 32, "character": 28}}, "message": "Error: Unclosed \"{\" (opened line 16, column 73)", "severity": 1}, {"range": {"start": {"line": 32, "character": 22}, "end": {"line": 32, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~placeholder: string=?, ~poster: string=?, ~preload: string=?,\n         ~radioGroup: string=?, ~readOnly: bool=?, ~rel: string=?,\n         ~required: bool=?, ~reversed: bool=?, ~rows: int=?, ~rowSpan: \n         int=?, ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~type_: string=?, ~useMap: string=?,\n         ~value: string=?, ~width: string=?, ~wrap: string=?,\n         ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyDown: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onBlur: ReactEvent.Focus.t => unit=?,\n         ~onChange: ReactEvent.Form.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":12},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autofocus=t type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00810623168945ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 52, "jsonrpc": "2.0", "result": [{"label": "tan", "kind": 12, "detail": "float => float", "documentation": "Tangent. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:420"}, {"label": "truncate", "kind": 12, "detail": "float => int", "documentation": "Same as int_of_float.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:609"}, {"label": "tanh", "kind": 12, "detail": "float => float", "documentation": "Hyperbolic tangent. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:454"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 21-22:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~useMap: string=?, ~width: string=?,
         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 21}, "end": {"line": 32, "character": 22}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~useMap: string=?, ~width: string=?,\n         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":13},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autofocus= type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":14},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autofocus=t type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re"},"position":{"line":32,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00405311584473ms
Opens folkz > 0 
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
Opens nows 3 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"label": "tan", "kind": 12, "detail": "float => float", "documentation": "Tangent. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:420"}, {"label": "truncate", "kind": 12, "detail": "float => int", "documentation": "Same as int_of_float.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:609"}, {"label": "tanh", "kind": 12, "detail": "float => float", "documentation": "Hyperbolic tangent. Argument is in radians.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:454"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 21-22:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~useMap: string=?, ~width: string=?,
         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 21}, "end": {"line": 32, "character": 22}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~useMap: string=?, ~width: string=?,\n         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":15},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autofocus=true type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 21-25:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~useMap: string=?, ~width: string=?,
         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 21}, "end": {"line": 32, "character": 25}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~useMap: string=?, ~width: string=?,\n         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":15}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/5] [34mBuilding[39m [2msrc/InputBox-Boxpacker.cmj[22m
FAILED: src/InputBox-Boxpacker.cmj src/InputBox-Boxpacker.cmi /home/mthorning/Documents/code/boxpacker/ui/lib/js/src/InputBox.bs.js 
/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -bs-package-name boxpacker -bs-ns Boxpacker  -bs-package-output commonjs:lib/js/src -color always -bs-suffix -I . -I src -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/ocaml -I /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/ocaml  -bs-super-errors -bs-no-version-header -o src/InputBox-Boxpacker.cmj src/InputBox.reast

  We've found a bug for you!
  /home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re 33:22-25
  
  31 │ 
  32 │   <div onClick=stop className=Styles.container>
  33 │     <input autofocus=true type_="search" placeholder onChange onKeyDow
       n value onBlur />
  34 │   </div>;
  35 │ };
  
  The function applied to this argument has type
    (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
    ~ariaDisabled: bool=?, ~ariaHidden: bool=?, ~ariaKeyshortcuts: string=?,
    ~ariaLabel: string=?, ~ariaRoledescription: string=?,
    ~ariaExpanded: bool=?, ~ariaLevel: int=?, ~ariaModal: bool=?,
    ~ariaMultiline: bool=?, ~ariaMultiselectable: bool=?,
    ~ariaPlaceholder: string=?, ~ariaReadonly: bool=?, ~ariaRequired: 
    bool=?, ~ariaSelected: bool=?, ~ariaSort: string=?,
    ~ariaValuemax: float=?, ~ariaValuemin: float=?, ~ariaValuenow: float=?,
    ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
    ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
    ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
    ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
    ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
    ~ariaFlowto: string=?, ~ariaLabelledby: string=?, ~ariaOwns: string=?,
    ~ariaPosinset: int=?, ~ariaRowcount: int=?, ~ariaRowindex: int=?,
    ~ariaRowspan: int=?, ~ariaSetsize: int=?, ~defaultChecked: bool=?,
    ~defaultValue: string=?, ~accessKey: string=?, ~className: string=?,
    ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
    ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
    ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
    ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
    ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
    ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
    ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
    ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
    ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
    ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?, ~cols: int=?,
    ~colSpan: int=?, ~content: string=?, ~controls: bool=?,
    ~coords: string=?, ~data: string=?, ~dateTime: string=?,
    ~default: bool=?, ~defer: bool=?, ~disabled: bool=?, ~download: string=?,
    ~encType: string=?, ~form: string=?, ~formAction: string=?,
    ~formTarget: string=?, ~formMethod: string=?, ~headers: string=?,
    ~height: string=?, ~high: int=?, ~href: string=?, ~hrefLang: string=?,
    ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
    ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
    ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
    ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: int=?,
    ~media: string=?, ~mediaGroup: string=?, ~method: string=?, ~min: 
    int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
    ~name: string=?, ~nonce: string=?, ~noValidate: bool=?, ~open_: bool=?,
    ~optimum: int=?, ~pattern: string=?, ~poster: string=?,
    ~preload: string=?, ~radioGroup: string=?, ~readOnly: bool=?,
    ~rel: string=?, ~required: bool=?, ~reversed: bool=?, ~rows: int=?,
    ~rowSpan: int=?, ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
    ~scrolling: string=?, ~selected: bool=?, ~shape: string=?, ~size: 
    int=?, ~sizes: string=?, ~span: int=?, ~src: string=?, ~srcDoc: string=?,
    ~srcLang: string=?, ~srcSet: string=?, ~start: int=?, ~step: float=?,
    ~summary: string=?, ~target: string=?, ~useMap: string=?,
    ~width: string=?, ~wrap: string=?,
    ~onCopy: ReactEvent.Clipboard.t => unit=?,
    ~onCut: ReactEvent.Clipboard.t => unit=?,
    ~onPaste: ReactEvent.Clipboard.t => unit=?,
    ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
    ~onCompositionStart: ReactEvent.Composition.t => unit=?,
    ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
    ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
    ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
    ~onFocus: ReactEvent.Focus.t => unit=?,
    ~onInput: ReactEvent.Form.t => unit=?,
    ~onSubmit: ReactEvent.Form.t => unit=?,
    ~onClick: ReactEvent.Mouse.t => unit=?,
    ~onContextMenu: ReactEvent.Mouse.t => unit=?,
    ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
    ~onDrag: ReactEvent.Mouse.t => unit=?,
    ~onDragEnd: ReactEvent.Mouse.t => unit=?,
    ~onDragEnter: ReactEvent.Mouse.t => unit=?,
    ~onDragExit: ReactEvent.Mouse.t => unit=?,
    ~onDragLeave: ReactEvent.Mouse.t => unit=?,
    ~onDragOver: ReactEvent.Mouse.t => unit=?,
    ~onDragStart: ReactEvent.Mouse.t => unit=?,
    ~onDrop: ReactEvent.Mouse.t => unit=?,
    ~onMouseDown: ReactEvent.Mouse.t => unit=?,
    ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
    ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
    ~onMouseMove: ReactEvent.Mouse.t => unit=?,
    ~onMouseOut: ReactEvent.Mouse.t => unit=?,
    ~onMouseOver: ReactEvent.Mouse.t => unit=?,
    ~onMouseUp: ReactEvent.Mouse.t => unit=?,
    ~onSelect: ReactEvent.Selection.t => unit=?,
    ~onTouchCancel: ReactEvent.Touch.t => unit=?,
    ~onTouchEnd: ReactEvent.Touch.t => unit=?,
    ~onTouchMove: ReactEvent.Touch.t => unit=?,
    ~onTouchStart: ReactEvent.Touch.t => unit=?,
    ~onScroll: ReactEvent.UI.t => unit=?,
    ~onWheel: ReactEvent.Wheel.t => unit=?,
    ~onAbort: ReactEvent.Media.t => unit=?,
    ~onCanPlay: ReactEvent.Media.t => unit=?,
    ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
    ~onDurationChange: ReactEvent.Media.t => unit=?,
    ~onEmptied: ReactEvent.Media.t => unit=?,
    ~onEncrypetd: ReactEvent.Media.t => unit=?,
    ~onEnded: ReactEvent.Media.t => unit=?,
    ~onError: ReactEvent.Media.t => unit=?,
    ~onLoadedData: ReactEvent.Media.t => unit=?,
    ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
    ~onLoadStart: ReactEvent.Media.t => unit=?,
    ~onPause: ReactEvent.Media.t => unit=?,
    ~onPlay: ReactEvent.Media.t => unit=?,
    ~onPlaying: ReactEvent.Media.t => unit=?,
    ~onProgress: ReactEvent.Media.t => unit=?,
    ~onRateChange: ReactEvent.Media.t => unit=?,
    ~onSeeked: ReactEvent.Media.t => unit=?,
    ~onSeeking: ReactEvent.Media.t => unit=?,
    ~onStalled: ReactEvent.Media.t => unit=?,
    ~onSuspend: ReactEvent.Media.t => unit=?,
    ~onTimeUpdate: ReactEvent.Media.t => unit=?,
    ~onVolumeChange: ReactEvent.Media.t => unit=?,
    ~onWaiting: ReactEvent.Media.t => unit=?,
    ~onLoad: ReactEvent.Image.t => unit=?,
    ~onAnimationStart: ReactEvent.Animation.t => unit=?,
    ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
    ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
    ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
    ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
    ~alignmentBaseline: string=?, ~allowReorder: string=?,
    ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
    ~ascent: string=?, ~attributeName: string=?, ~attributeType: string=?,
    ~autoReverse: string=?, ~azimuth: string=?, ~baseFrequency: string=?,
    ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
    ~begin_: string=?, ~bias: string=?, ~by: string=?, ~calcMode: string=?,
    ~capHeight: string=?, ~clip: string=?, ~clipPath: string=?,
    ~clipPathUnits: string=?, ~clipRule: string=?,
    ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
    ~colorProfile: string=?, ~colorRendering: string=?,
    ~contentScriptType: string=?, ~contentStyleType: string=?,
    ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
    ~decelerate: string=?, ~descent: string=?, ~diffuseConstant: string=?,
    ~direction: string=?, ~display: string=?, ~divisor: string=?,
    ~dominantBaseline: string=?, ~dur: string=?, ~dx: string=?,
    ~dy: string=?, ~edgeMode: string=?, ~elevation: string=?,
    ~enableBackground: string=?, ~end_: string=?, ~exponent: string=?,
    ~externalResourcesRequired: string=?, ~fill: string=?,
    ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
    ~filterRes: string=?, ~filterUnits: string=?, ~floodColor: string=?,
    ~floodOpacity: string=?, ~focusable: string=?, ~fontFamily: string=?,
    ~fontSize: string=?, ~fontSizeAdjust: string=?, ~fontStretch: string=?,
    ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
    ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
    ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
    ~glyphOrientationHorizontal: string=?,
    ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
    ~gradientTransform: string=?, ~gradientUnits: string=?,
    ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
    ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
    ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
    ~k2: string=?, ~k3: string=?, ~k4: string=?, ~kernelMatrix: string=?,
    ~kernelUnitLength: string=?, ~kerning: string=?, ~keyPoints: string=?,
    ~keySplines: string=?, ~keyTimes: string=?, ~lengthAdjust: string=?,
    ~letterSpacing: string=?, ~lightingColor: string=?,
    ~limitingConeAngle: string=?, ~local: string=?, ~markerEnd: string=?,
    ~markerHeight: string=?, ~markerMid: string=?, ~markerStart: string=?,
    ~markerUnits: string=?, ~markerWidth: string=?, ~mask: string=?,
    ~maskContentUnits: string=?, ~maskUnits: string=?,
    ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
    ~offset: string=?, ~opacity: string=?, ~operator: string=?,
    ~order: string=?, ~orient: string=?, ~orientation: string=?,
    ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
    ~overflowY: string=?, ~overlinePosition: string=?,
    ~overlineThickness: string=?, ~paintOrder: string=?, ~panose1: string=?,
    ~pathLength: string=?, ~patternContentUnits: string=?,
    ~patternTransform: string=?, ~patternUnits: string=?,
    ~pointerEvents: string=?, ~points: string=?, ~pointsAtX: string=?,
    ~pointsAtY: string=?, ~pointsAtZ: string=?, ~preserveAlpha: string=?,
    ~preserveAspectRatio: string=?, ~primitiveUnits: string=?, ~r: string=?,
    ~radius: string=?, ~refX: string=?, ~refY: string=?,
    ~renderingIntent: string=?, ~repeatCount: string=?, ~repeatDur: string=?,
    ~requiredExtensions: string=?, ~requiredFeatures: string=?,
    ~restart: string=?, ~result: string=?, ~rotate: string=?, ~rx: string=?,
    ~ry: string=?, ~scale: string=?, ~seed: string=?,
    ~shapeRendering: string=?, ~slope: string=?, ~spacing: string=?,
    ~specularConstant: string=?, ~specularExponent: string=?,
    ~speed: string=?, ~spreadMethod: string=?, ~startOffset: string=?,
    ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
    ~stitchTiles: string=?, ~stopColor: string=?, ~stopOpacity: string=?,
    ~strikethroughPosition: string=?, ~strikethroughThickness: string=?,
    ~string: string=?, ~stroke: string=?, ~strokeDasharray: string=?,
    ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
    ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
    ~strokeOpacity: string=?, ~strokeWidth: string=?,
    ~surfaceScale: string=?, ~systemLanguage: string=?,
    ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
    ~textAnchor: string=?, ~textDecoration: string=?, ~textLength: string=?,
    ~textRendering: string=?, ~to_: string=?, ~transform: string=?,
    ~u1: string=?, ~u2: string=?, ~underlinePosition: string=?,
    ~underlineThickness: string=?, ~unicode: string=?,
    ~unicodeBidi: string=?, ~unicodeRange: string=?, ~unitsPerEm: string=?,
    ~vAlphabetic: string=?, ~vHanging: string=?, ~vIdeographic: string=?,
    ~vMathematical: string=?, ~values: string=?, ~vectorEffect: string=?,
    ~version: string=?, ~vertAdvX: string=?, ~vertAdvY: string=?,
    ~vertOriginX: string=?, ~vertOriginY: string=?, ~viewBox: string=?,
    ~viewTarget: string=?, ~visibility: string=?, ~widths: string=?,
    ~wordSpacing: string=?, ~writingMode: string=?, ~x: string=?,
    ~x1: string=?, ~x2: string=?, ~xChannelSelector: string=?,
    ~xHeight: string=?, ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
    ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
    ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
    ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
    ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
    ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
    ~about: string=?, ~datatype: string=?, ~inlist: string=?,
    ~prefix: string=?, ~property: string=?, ~resource: string=?,
    ~typeof: string=?, ~vocab: string=?,
    ~dangerouslySetInnerHTML: {. "__html": string}=?,
    ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
  
FAILED: subcommand failed.
>>> stderr

Affected files: file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.cmt
Size 124206
type error here File "", line 33, characters 21-25:
Error: The function applied to this argument has type
         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,
         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,
         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,
         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,
         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,
         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,
         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: 
         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,
         ~ariaValuemin: float=?, ~ariaValuenow: float=?,
         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,
         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,
         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,
         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,
         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,
         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,
         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,
         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,
         ~defaultChecked: bool=?, ~defaultValue: string=?,
         ~accessKey: string=?, ~className: string=?,
         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,
         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,
         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,
         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,
         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,
         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,
         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,
         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,
         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,
         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,
         ~cols: int=?, ~colSpan: int=?, ~content: string=?,
         ~controls: bool=?, ~coords: string=?, ~data: string=?,
         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,
         ~disabled: bool=?, ~download: string=?, ~encType: string=?,
         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,
         ~formMethod: string=?, ~headers: string=?, ~height: string=?,
         ~high: int=?, ~href: string=?, ~hrefLang: string=?,
         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,
         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,
         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,
         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: 
         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,
         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,
         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,
         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,
         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,
         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,
         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,
         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,
         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,
         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,
         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,
         ~start: int=?, ~step: float=?, ~summary: string=?,
         ~target: string=?, ~useMap: string=?, ~width: string=?,
         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,
         ~onCut: ReactEvent.Clipboard.t => unit=?,
         ~onPaste: ReactEvent.Clipboard.t => unit=?,
         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,
         ~onCompositionStart: ReactEvent.Composition.t => unit=?,
         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,
         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,
         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,
         ~onFocus: ReactEvent.Focus.t => unit=?,
         ~onInput: ReactEvent.Form.t => unit=?,
         ~onSubmit: ReactEvent.Form.t => unit=?,
         ~onClick: ReactEvent.Mouse.t => unit=?,
         ~onContextMenu: ReactEvent.Mouse.t => unit=?,
         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,
         ~onDrag: ReactEvent.Mouse.t => unit=?,
         ~onDragEnd: ReactEvent.Mouse.t => unit=?,
         ~onDragEnter: ReactEvent.Mouse.t => unit=?,
         ~onDragExit: ReactEvent.Mouse.t => unit=?,
         ~onDragLeave: ReactEvent.Mouse.t => unit=?,
         ~onDragOver: ReactEvent.Mouse.t => unit=?,
         ~onDragStart: ReactEvent.Mouse.t => unit=?,
         ~onDrop: ReactEvent.Mouse.t => unit=?,
         ~onMouseDown: ReactEvent.Mouse.t => unit=?,
         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,
         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,
         ~onMouseMove: ReactEvent.Mouse.t => unit=?,
         ~onMouseOut: ReactEvent.Mouse.t => unit=?,
         ~onMouseOver: ReactEvent.Mouse.t => unit=?,
         ~onMouseUp: ReactEvent.Mouse.t => unit=?,
         ~onSelect: ReactEvent.Selection.t => unit=?,
         ~onTouchCancel: ReactEvent.Touch.t => unit=?,
         ~onTouchEnd: ReactEvent.Touch.t => unit=?,
         ~onTouchMove: ReactEvent.Touch.t => unit=?,
         ~onTouchStart: ReactEvent.Touch.t => unit=?,
         ~onScroll: ReactEvent.UI.t => unit=?,
         ~onWheel: ReactEvent.Wheel.t => unit=?,
         ~onAbort: ReactEvent.Media.t => unit=?,
         ~onCanPlay: ReactEvent.Media.t => unit=?,
         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,
         ~onDurationChange: ReactEvent.Media.t => unit=?,
         ~onEmptied: ReactEvent.Media.t => unit=?,
         ~onEncrypetd: ReactEvent.Media.t => unit=?,
         ~onEnded: ReactEvent.Media.t => unit=?,
         ~onError: ReactEvent.Media.t => unit=?,
         ~onLoadedData: ReactEvent.Media.t => unit=?,
         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,
         ~onLoadStart: ReactEvent.Media.t => unit=?,
         ~onPause: ReactEvent.Media.t => unit=?,
         ~onPlay: ReactEvent.Media.t => unit=?,
         ~onPlaying: ReactEvent.Media.t => unit=?,
         ~onProgress: ReactEvent.Media.t => unit=?,
         ~onRateChange: ReactEvent.Media.t => unit=?,
         ~onSeeked: ReactEvent.Media.t => unit=?,
         ~onSeeking: ReactEvent.Media.t => unit=?,
         ~onStalled: ReactEvent.Media.t => unit=?,
         ~onSuspend: ReactEvent.Media.t => unit=?,
         ~onTimeUpdate: ReactEvent.Media.t => unit=?,
         ~onVolumeChange: ReactEvent.Media.t => unit=?,
         ~onWaiting: ReactEvent.Media.t => unit=?,
         ~onLoad: ReactEvent.Image.t => unit=?,
         ~onAnimationStart: ReactEvent.Animation.t => unit=?,
         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,
         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,
         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,
         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,
         ~alignmentBaseline: string=?, ~allowReorder: string=?,
         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,
         ~ascent: string=?, ~attributeName: string=?,
         ~attributeType: string=?, ~autoReverse: string=?,
         ~azimuth: string=?, ~baseFrequency: string=?,
         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,
         ~begin_: string=?, ~bias: string=?, ~by: string=?,
         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,
         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,
         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,
         ~colorProfile: string=?, ~colorRendering: string=?,
         ~contentScriptType: string=?, ~contentStyleType: string=?,
         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,
         ~decelerate: string=?, ~descent: string=?,
         ~diffuseConstant: string=?, ~direction: string=?,
         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,
         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,
         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,
         ~exponent: string=?, ~externalResourcesRequired: string=?,
         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,
         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,
         ~fontSizeAdjust: string=?, ~fontStretch: string=?,
         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,
         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,
         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,
         ~gradientTransform: string=?, ~gradientUnits: string=?,
         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,
         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,
         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,
         ~k2: string=?, ~k3: string=?, ~k4: string=?,
         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,
         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,
         ~keyTimes: string=?, ~lengthAdjust: string=?,
         ~letterSpacing: string=?, ~lightingColor: string=?,
         ~limitingConeAngle: string=?, ~local: string=?,
         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,
         ~markerStart: string=?, ~markerUnits: string=?,
         ~markerWidth: string=?, ~mask: string=?,
         ~maskContentUnits: string=?, ~maskUnits: string=?,
         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,
         ~offset: string=?, ~opacity: string=?, ~operator: string=?,
         ~order: string=?, ~orient: string=?, ~orientation: string=?,
         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~overlinePosition: string=?,
         ~overlineThickness: string=?, ~paintOrder: string=?,
         ~panose1: string=?, ~pathLength: string=?,
         ~patternContentUnits: string=?, ~patternTransform: string=?,
         ~patternUnits: string=?, ~pointerEvents: string=?,
         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,
         ~pointsAtZ: string=?, ~preserveAlpha: string=?,
         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,
         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,
         ~renderingIntent: string=?, ~repeatCount: string=?,
         ~repeatDur: string=?, ~requiredExtensions: string=?,
         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,
         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,
         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,
         ~spacing: string=?, ~specularConstant: string=?,
         ~specularExponent: string=?, ~speed: string=?,
         ~spreadMethod: string=?, ~startOffset: string=?,
         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,
         ~stitchTiles: string=?, ~stopColor: string=?,
         ~stopOpacity: string=?, ~strikethroughPosition: string=?,
         ~strikethroughThickness: string=?, ~string: string=?,
         ~stroke: string=?, ~strokeDasharray: string=?,
         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
         ~strokeOpacity: string=?, ~strokeWidth: string=?,
         ~surfaceScale: string=?, ~systemLanguage: string=?,
         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,
         ~textAnchor: string=?, ~textDecoration: string=?,
         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,
         ~transform: string=?, ~u1: string=?, ~u2: string=?,
         ~underlinePosition: string=?, ~underlineThickness: string=?,
         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,
         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,
         ~vIdeographic: string=?, ~vMathematical: string=?,
         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,
         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,
         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,
         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,
         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,
         ~xChannelSelector: string=?, ~xHeight: string=?,
         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,
         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,
         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,
         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,
         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,
         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,
         ~about: string=?, ~datatype: string=?, ~inlist: string=?,
         ~prefix: string=?, ~property: string=?, ~resource: string=?,
         ~typeof: string=?, ~vocab: string=?,
         ~dangerouslySetInnerHTML: {. "__html": string}=?,
         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps
This argument cannot be applied with label ~autofocus
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": [{"range": {"start": {"line": 32, "character": 21}, "end": {"line": 32, "character": 25}}, "message": "Error: The function applied to this argument has type\n         (~key: string=?, ~ref: ReactDOMRe.domRef=?, ~ariaDetails: string=?,\n         ~ariaDisabled: bool=?, ~ariaHidden: bool=?,\n         ~ariaKeyshortcuts: string=?, ~ariaLabel: string=?,\n         ~ariaRoledescription: string=?, ~ariaExpanded: bool=?,\n         ~ariaLevel: int=?, ~ariaModal: bool=?, ~ariaMultiline: bool=?,\n         ~ariaMultiselectable: bool=?, ~ariaPlaceholder: string=?,\n         ~ariaReadonly: bool=?, ~ariaRequired: bool=?, ~ariaSelected: \n         bool=?, ~ariaSort: string=?, ~ariaValuemax: float=?,\n         ~ariaValuemin: float=?, ~ariaValuenow: float=?,\n         ~ariaValuetext: string=?, ~ariaAtomic: bool=?, ~ariaBusy: bool=?,\n         ~ariaRelevant: string=?, ~ariaGrabbed: bool=?,\n         ~ariaActivedescendant: string=?, ~ariaColcount: int=?,\n         ~ariaColindex: int=?, ~ariaColspan: int=?, ~ariaControls: string=?,\n         ~ariaDescribedby: string=?, ~ariaErrormessage: string=?,\n         ~ariaFlowto: string=?, ~ariaLabelledby: string=?,\n         ~ariaOwns: string=?, ~ariaPosinset: int=?, ~ariaRowcount: int=?,\n         ~ariaRowindex: int=?, ~ariaRowspan: int=?, ~ariaSetsize: int=?,\n         ~defaultChecked: bool=?, ~defaultValue: string=?,\n         ~accessKey: string=?, ~className: string=?,\n         ~contentEditable: bool=?, ~contextMenu: string=?, ~dir: string=?,\n         ~draggable: bool=?, ~hidden: bool=?, ~id: string=?, ~lang: string=?,\n         ~role: string=?, ~style: ReactDOMRe.style=?, ~spellCheck: bool=?,\n         ~tabIndex: int=?, ~title: string=?, ~itemID: string=?,\n         ~itemProp: string=?, ~itemRef: string=?, ~itemScope: bool=?,\n         ~itemType: string=?, ~accept: string=?, ~acceptCharset: string=?,\n         ~action: string=?, ~allowFullScreen: bool=?, ~alt: string=?,\n         ~async: bool=?, ~autoComplete: string=?, ~autoFocus: bool=?,\n         ~autoPlay: bool=?, ~challenge: string=?, ~charSet: string=?,\n         ~checked: bool=?, ~cite: string=?, ~crossorigin: bool=?,\n         ~cols: int=?, ~colSpan: int=?, ~content: string=?,\n         ~controls: bool=?, ~coords: string=?, ~data: string=?,\n         ~dateTime: string=?, ~default: bool=?, ~defer: bool=?,\n         ~disabled: bool=?, ~download: string=?, ~encType: string=?,\n         ~form: string=?, ~formAction: string=?, ~formTarget: string=?,\n         ~formMethod: string=?, ~headers: string=?, ~height: string=?,\n         ~high: int=?, ~href: string=?, ~hrefLang: string=?,\n         ~htmlFor: string=?, ~httpEquiv: string=?, ~icon: string=?,\n         ~inputMode: string=?, ~integrity: string=?, ~keyType: string=?,\n         ~kind: string=?, ~label: string=?, ~list: string=?, ~loop: bool=?,\n         ~low: int=?, ~manifest: string=?, ~max: string=?, ~maxLength: \n         int=?, ~media: string=?, ~mediaGroup: string=?, ~method: string=?,\n         ~min: int=?, ~minLength: int=?, ~multiple: bool=?, ~muted: bool=?,\n         ~name: string=?, ~nonce: string=?, ~noValidate: bool=?,\n         ~open_: bool=?, ~optimum: int=?, ~pattern: string=?,\n         ~poster: string=?, ~preload: string=?, ~radioGroup: string=?,\n         ~readOnly: bool=?, ~rel: string=?, ~required: bool=?,\n         ~reversed: bool=?, ~rows: int=?, ~rowSpan: int=?,\n         ~sandbox: string=?, ~scope: string=?, ~scoped: bool=?,\n         ~scrolling: string=?, ~selected: bool=?, ~shape: string=?,\n         ~size: int=?, ~sizes: string=?, ~span: int=?, ~src: string=?,\n         ~srcDoc: string=?, ~srcLang: string=?, ~srcSet: string=?,\n         ~start: int=?, ~step: float=?, ~summary: string=?,\n         ~target: string=?, ~useMap: string=?, ~width: string=?,\n         ~wrap: string=?, ~onCopy: ReactEvent.Clipboard.t => unit=?,\n         ~onCut: ReactEvent.Clipboard.t => unit=?,\n         ~onPaste: ReactEvent.Clipboard.t => unit=?,\n         ~onCompositionEnd: ReactEvent.Composition.t => unit=?,\n         ~onCompositionStart: ReactEvent.Composition.t => unit=?,\n         ~onCompositionUpdate: ReactEvent.Composition.t => unit=?,\n         ~onKeyPress: ReactEvent.Keyboard.t => unit=?,\n         ~onKeyUp: ReactEvent.Keyboard.t => unit=?,\n         ~onFocus: ReactEvent.Focus.t => unit=?,\n         ~onInput: ReactEvent.Form.t => unit=?,\n         ~onSubmit: ReactEvent.Form.t => unit=?,\n         ~onClick: ReactEvent.Mouse.t => unit=?,\n         ~onContextMenu: ReactEvent.Mouse.t => unit=?,\n         ~onDoubleClick: ReactEvent.Mouse.t => unit=?,\n         ~onDrag: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnd: ReactEvent.Mouse.t => unit=?,\n         ~onDragEnter: ReactEvent.Mouse.t => unit=?,\n         ~onDragExit: ReactEvent.Mouse.t => unit=?,\n         ~onDragLeave: ReactEvent.Mouse.t => unit=?,\n         ~onDragOver: ReactEvent.Mouse.t => unit=?,\n         ~onDragStart: ReactEvent.Mouse.t => unit=?,\n         ~onDrop: ReactEvent.Mouse.t => unit=?,\n         ~onMouseDown: ReactEvent.Mouse.t => unit=?,\n         ~onMouseEnter: ReactEvent.Mouse.t => unit=?,\n         ~onMouseLeave: ReactEvent.Mouse.t => unit=?,\n         ~onMouseMove: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOut: ReactEvent.Mouse.t => unit=?,\n         ~onMouseOver: ReactEvent.Mouse.t => unit=?,\n         ~onMouseUp: ReactEvent.Mouse.t => unit=?,\n         ~onSelect: ReactEvent.Selection.t => unit=?,\n         ~onTouchCancel: ReactEvent.Touch.t => unit=?,\n         ~onTouchEnd: ReactEvent.Touch.t => unit=?,\n         ~onTouchMove: ReactEvent.Touch.t => unit=?,\n         ~onTouchStart: ReactEvent.Touch.t => unit=?,\n         ~onScroll: ReactEvent.UI.t => unit=?,\n         ~onWheel: ReactEvent.Wheel.t => unit=?,\n         ~onAbort: ReactEvent.Media.t => unit=?,\n         ~onCanPlay: ReactEvent.Media.t => unit=?,\n         ~onCanPlayThrough: ReactEvent.Media.t => unit=?,\n         ~onDurationChange: ReactEvent.Media.t => unit=?,\n         ~onEmptied: ReactEvent.Media.t => unit=?,\n         ~onEncrypetd: ReactEvent.Media.t => unit=?,\n         ~onEnded: ReactEvent.Media.t => unit=?,\n         ~onError: ReactEvent.Media.t => unit=?,\n         ~onLoadedData: ReactEvent.Media.t => unit=?,\n         ~onLoadedMetadata: ReactEvent.Media.t => unit=?,\n         ~onLoadStart: ReactEvent.Media.t => unit=?,\n         ~onPause: ReactEvent.Media.t => unit=?,\n         ~onPlay: ReactEvent.Media.t => unit=?,\n         ~onPlaying: ReactEvent.Media.t => unit=?,\n         ~onProgress: ReactEvent.Media.t => unit=?,\n         ~onRateChange: ReactEvent.Media.t => unit=?,\n         ~onSeeked: ReactEvent.Media.t => unit=?,\n         ~onSeeking: ReactEvent.Media.t => unit=?,\n         ~onStalled: ReactEvent.Media.t => unit=?,\n         ~onSuspend: ReactEvent.Media.t => unit=?,\n         ~onTimeUpdate: ReactEvent.Media.t => unit=?,\n         ~onVolumeChange: ReactEvent.Media.t => unit=?,\n         ~onWaiting: ReactEvent.Media.t => unit=?,\n         ~onLoad: ReactEvent.Image.t => unit=?,\n         ~onAnimationStart: ReactEvent.Animation.t => unit=?,\n         ~onAnimationEnd: ReactEvent.Animation.t => unit=?,\n         ~onAnimationIteration: ReactEvent.Animation.t => unit=?,\n         ~onTransitionEnd: ReactEvent.Transition.t => unit=?,\n         ~accentHeight: string=?, ~accumulate: string=?, ~additive: string=?,\n         ~alignmentBaseline: string=?, ~allowReorder: string=?,\n         ~alphabetic: string=?, ~amplitude: string=?, ~arabicForm: string=?,\n         ~ascent: string=?, ~attributeName: string=?,\n         ~attributeType: string=?, ~autoReverse: string=?,\n         ~azimuth: string=?, ~baseFrequency: string=?,\n         ~baseProfile: string=?, ~baselineShift: string=?, ~bbox: string=?,\n         ~begin_: string=?, ~bias: string=?, ~by: string=?,\n         ~calcMode: string=?, ~capHeight: string=?, ~clip: string=?,\n         ~clipPath: string=?, ~clipPathUnits: string=?, ~clipRule: string=?,\n         ~colorInterpolation: string=?, ~colorInterpolationFilters: string=?,\n         ~colorProfile: string=?, ~colorRendering: string=?,\n         ~contentScriptType: string=?, ~contentStyleType: string=?,\n         ~cursor: string=?, ~cx: string=?, ~cy: string=?, ~d: string=?,\n         ~decelerate: string=?, ~descent: string=?,\n         ~diffuseConstant: string=?, ~direction: string=?,\n         ~display: string=?, ~divisor: string=?, ~dominantBaseline: string=?,\n         ~dur: string=?, ~dx: string=?, ~dy: string=?, ~edgeMode: string=?,\n         ~elevation: string=?, ~enableBackground: string=?, ~end_: string=?,\n         ~exponent: string=?, ~externalResourcesRequired: string=?,\n         ~fill: string=?, ~fillOpacity: string=?, ~fillRule: string=?,\n         ~filter: string=?, ~filterRes: string=?, ~filterUnits: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~focusable: string=?, ~fontFamily: string=?, ~fontSize: string=?,\n         ~fontSizeAdjust: string=?, ~fontStretch: string=?,\n         ~fontStyle: string=?, ~fontVariant: string=?, ~fontWeight: string=?,\n         ~fomat: string=?, ~from: string=?, ~fx: string=?, ~fy: string=?,\n         ~g1: string=?, ~g2: string=?, ~glyphName: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~glyphRef: string=?,\n         ~gradientTransform: string=?, ~gradientUnits: string=?,\n         ~hanging: string=?, ~horizAdvX: string=?, ~horizOriginX: string=?,\n         ~ideographic: string=?, ~imageRendering: string=?, ~in_: string=?,\n         ~in2: string=?, ~intercept: string=?, ~k: string=?, ~k1: string=?,\n         ~k2: string=?, ~k3: string=?, ~k4: string=?,\n         ~kernelMatrix: string=?, ~kernelUnitLength: string=?,\n         ~kerning: string=?, ~keyPoints: string=?, ~keySplines: string=?,\n         ~keyTimes: string=?, ~lengthAdjust: string=?,\n         ~letterSpacing: string=?, ~lightingColor: string=?,\n         ~limitingConeAngle: string=?, ~local: string=?,\n         ~markerEnd: string=?, ~markerHeight: string=?, ~markerMid: string=?,\n         ~markerStart: string=?, ~markerUnits: string=?,\n         ~markerWidth: string=?, ~mask: string=?,\n         ~maskContentUnits: string=?, ~maskUnits: string=?,\n         ~mathematical: string=?, ~mode: string=?, ~numOctaves: string=?,\n         ~offset: string=?, ~opacity: string=?, ~operator: string=?,\n         ~order: string=?, ~orient: string=?, ~orientation: string=?,\n         ~origin: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~overlinePosition: string=?,\n         ~overlineThickness: string=?, ~paintOrder: string=?,\n         ~panose1: string=?, ~pathLength: string=?,\n         ~patternContentUnits: string=?, ~patternTransform: string=?,\n         ~patternUnits: string=?, ~pointerEvents: string=?,\n         ~points: string=?, ~pointsAtX: string=?, ~pointsAtY: string=?,\n         ~pointsAtZ: string=?, ~preserveAlpha: string=?,\n         ~preserveAspectRatio: string=?, ~primitiveUnits: string=?,\n         ~r: string=?, ~radius: string=?, ~refX: string=?, ~refY: string=?,\n         ~renderingIntent: string=?, ~repeatCount: string=?,\n         ~repeatDur: string=?, ~requiredExtensions: string=?,\n         ~requiredFeatures: string=?, ~restart: string=?, ~result: string=?,\n         ~rotate: string=?, ~rx: string=?, ~ry: string=?, ~scale: string=?,\n         ~seed: string=?, ~shapeRendering: string=?, ~slope: string=?,\n         ~spacing: string=?, ~specularConstant: string=?,\n         ~specularExponent: string=?, ~speed: string=?,\n         ~spreadMethod: string=?, ~startOffset: string=?,\n         ~stdDeviation: string=?, ~stemh: string=?, ~stemv: string=?,\n         ~stitchTiles: string=?, ~stopColor: string=?,\n         ~stopOpacity: string=?, ~strikethroughPosition: string=?,\n         ~strikethroughThickness: string=?, ~string: string=?,\n         ~stroke: string=?, ~strokeDasharray: string=?,\n         ~strokeDashoffset: string=?, ~strokeLinecap: string=?,\n         ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,\n         ~strokeOpacity: string=?, ~strokeWidth: string=?,\n         ~surfaceScale: string=?, ~systemLanguage: string=?,\n         ~tableValues: string=?, ~targetX: string=?, ~targetY: string=?,\n         ~textAnchor: string=?, ~textDecoration: string=?,\n         ~textLength: string=?, ~textRendering: string=?, ~to_: string=?,\n         ~transform: string=?, ~u1: string=?, ~u2: string=?,\n         ~underlinePosition: string=?, ~underlineThickness: string=?,\n         ~unicode: string=?, ~unicodeBidi: string=?, ~unicodeRange: string=?,\n         ~unitsPerEm: string=?, ~vAlphabetic: string=?, ~vHanging: string=?,\n         ~vIdeographic: string=?, ~vMathematical: string=?,\n         ~values: string=?, ~vectorEffect: string=?, ~version: string=?,\n         ~vertAdvX: string=?, ~vertAdvY: string=?, ~vertOriginX: string=?,\n         ~vertOriginY: string=?, ~viewBox: string=?, ~viewTarget: string=?,\n         ~visibility: string=?, ~widths: string=?, ~wordSpacing: string=?,\n         ~writingMode: string=?, ~x: string=?, ~x1: string=?, ~x2: string=?,\n         ~xChannelSelector: string=?, ~xHeight: string=?,\n         ~xlinkActuate: string=?, ~xlinkArcrole: string=?,\n         ~xlinkHref: string=?, ~xlinkRole: string=?, ~xlinkShow: string=?,\n         ~xlinkTitle: string=?, ~xlinkType: string=?, ~xmlns: string=?,\n         ~xmlnsXlink: string=?, ~xmlBase: string=?, ~xmlLang: string=?,\n         ~xmlSpace: string=?, ~y: string=?, ~y1: string=?, ~y2: string=?,\n         ~yChannelSelector: string=?, ~z: string=?, ~zoomAndPan: string=?,\n         ~about: string=?, ~datatype: string=?, ~inlist: string=?,\n         ~prefix: string=?, ~property: string=?, ~resource: string=?,\n         ~typeof: string=?, ~vocab: string=?,\n         ~dangerouslySetInnerHTML: {. \"__html\": string}=?,\n         ~suppressContentEditableWarning: bool=?) => ReactDOMRe.domProps\nThis argument cannot be applied with label ~autofocus", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":16},"contentChanges":[{"text":"module Styles = {\n  open Css;\n  let container = style([position(relative)]);\n  let closeIcon = visible =>\n    style([\n      5->px->top,\n      5->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\n[@react.component]\nlet make = (~valueCatcher=value => value, ~placeholder=\"\", ~onSubmit) => {\n  let (value, setValue) = React.useState(_ => \"\");\n\n  let onChange = event => {\n    let inputVal = event->ReactEvent.Form.target##value;\n    setValue(_ => valueCatcher(inputVal));\n  };\n\n  let onKeyDown = event =>\n    if (event->ReactEvent.Keyboard.keyCode === 13 && value !== \"\") {\n      onSubmit(value, () => setValue(_ => valueCatcher(\"\")));\n    };\n\n  let stop = event => ReactEvent.Mouse.stopPropagation(event);\n  let onBlur = _ => Js.log(\"blur\");\n\n  <div onClick=stop className=Styles.container>\n    <input autoFocus=true type_=\"search\" placeholder onChange onKeyDown value onBlur />\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/InputBox-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/InputBox.re","version":16}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
[1/7] [34mBuilding[39m [2msrc/InputBox.reast[22m
[2/7] [34mBuilding[39m [2msrc/InputBox.d[22m
[3/7] [34mBuilding[39m [2msrc/InputBox-Boxpacker.cmj[22m
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","languageId":"reason","version":1,"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox onSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":2},"contentChanges":[{"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox PonSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re"},"position":{"line":57,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.014066696167ms
Opens folkz > 1 Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Sending response {"id": 54, "jsonrpc": "2.0", "result": [{"label": "Pervasives", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Parsing", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Printexc", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}, {"label": "Printf", "kind": 9, "detail": "file module", "documentation": "No docs\n\nwait for uri:0"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.cmt
Size 107479
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 19}, "end": {"line": 57, "character": 28}}, "message": "Error: Unclosed \"{\" (opened line 57, column 4)", "severity": 1}, {"range": {"start": {"line": 57, "character": 44}, "end": {"line": 57, "character": 46}}, "message": "Error: Unbound value />", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":3},"contentChanges":[{"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox onSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":4},"contentChanges":[{"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox ponSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re"},"position":{"line":57,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00381469726562ms
Opens folkz > 1 Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 55, "jsonrpc": "2.0", "result": [{"label": "prerr_string", "kind": 12, "detail": "string => unit", "documentation": "Print a string on standard error.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:856"}, {"label": "pos_out", "kind": 12, "detail": "out_channel => int", "documentation": "Return the current writing position for the given channel. Does not work on channels opened with the `Open_append` flag \\(returns unspecified results\\).\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1006"}, {"label": "pred", "kind": 12, "detail": "int => int", "documentation": "`pred x` is `x - 1`.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:261"}, {"label": "pos_in", "kind": 12, "detail": "in_channel => int", "documentation": "Return the current reading position for the given channel.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:1123"}, {"label": "print_string", "kind": 12, "detail": "string => unit", "documentation": "Print a string on standard output.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:823"}, {"label": "print_int", "kind": 12, "detail": "int => unit", "documentation": "Print an integer, in decimal, on standard output.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:830"}, {"label": "prerr_float", "kind": 12, "detail": "float => unit", "documentation": "Print a floating-point number, in decimal, on standard error.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:866"}, {"label": "print_float", "kind": 12, "detail": "float => unit", "documentation": "Print a floating-point number, in decimal, on standard output.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:833"}, {"label": "print_newline", "kind": 12, "detail": "unit => unit", "documentation": "Print a newline character on standard output, and flush standard output. This can be used to simulate line buffering of standard output.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:845"}, {"label": "print_bytes", "kind": 12, "detail": "bytes => unit", "documentation": "Print a byte sequence on standard output.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:826"}, {"label": "prerr_bytes", "kind": 12, "detail": "bytes => unit", "documentation": "Print a byte sequence on standard error.\n\nSince: 4.02.0\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:859"}, {"label": "prerr_char", "kind": 12, "detail": "char => unit", "documentation": "Print a character on standard error.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:853"}, {"label": "print_endline", "kind": 12, "detail": "string => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:837"}, {"label": "prerr_newline", "kind": 12, "detail": "unit => unit", "documentation": "Print a newline character on standard error, and flush standard error.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:878"}, {"label": "prerr_endline", "kind": 12, "detail": "string => unit", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:870"}, {"label": "print_char", "kind": 12, "detail": "char => unit", "documentation": "Print a character on standard output.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:820"}, {"label": "prerr_int", "kind": 12, "detail": "int => unit", "documentation": "Print an integer, in decimal, on standard error.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:863"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.cmt
Size 109821
type error here File "", line 58, characters 29-43:
Error: The function applied to this argument has type
         (~valueCatcher: 'a=?, ~placeholder: 'b=?, ~key: string=?,
         ~onSubmit: 'c) =>
         {. "onSubmit": 'c, "placeholder": option('b),
           "valueCatcher": option('a)}
This argument cannot be applied with label ~ponSubmit
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 29}, "end": {"line": 57, "character": 43}}, "message": "Error: The function applied to this argument has type\n         (~valueCatcher: 'a=?, ~placeholder: 'b=?, ~key: string=?,\n         ~onSubmit: 'c) =>\n         {. \"onSubmit\": 'c, \"placeholder\": option('b),\n           \"valueCatcher\": option('a)}\nThis argument cannot be applied with label ~ponSubmit", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":5},"contentChanges":[{"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox placeholder=onSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.cmt
Size 110644
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 39}, "end": {"line": 57, "character": 40}}, "message": "Error: Unclosed \"{\" (opened line 57, column 4)", "severity": 1}, {"range": {"start": {"line": 57, "character": 10}, "end": {"line": 57, "character": 18}}, "message": "Error: This expression has type\n         (~onSubmit: 'a) =>\n         {. \"onSubmit\": 'a, \"placeholder\": option('b),\n           \"valueCatcher\": option('c)}\n       but an expression was expected of type\n         {. \"onSubmit\": (string, unit => unit) => unit,\n           \"placeholder\": option(string),\n           \"valueCatcher\": option(string => string)}", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":6},"contentChanges":[{"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox placeholder=nonSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}]}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re"},"position":{"line":57,"character":32},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Opens folkz > 1 Utils
Package opens Pervasives Boxpacker Boxpacker
Package opens Pervasives Boxpacker Boxpacker
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti, /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli)
FINDING /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.cmti src /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt, nil)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt src 
resolving open Utils.place holder
Not local
FINDING docs for module Impl(/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt, /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re)
FINDING /home/mthorning/Documents/code/boxpacker/ui/lib/bs/src/Utils-Boxpacker.cmt src /home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
Opens nows 4 file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
---------------- LOCAL VAL
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/lib/bs/Boxpacker.cmt
 -- not capitalized
 - Completing in file:///home/mthorning/Documents/code/boxpacker/ui/src/Utils.re
 -- not capitalized
Sending response {"id": 56, "jsonrpc": "2.0", "result": [{"label": "nameAndTotal", "kind": 12, "detail": "option(int) => string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re:51"}, {"label": "name", "kind": 12, "detail": "string", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re:47"}, {"label": "not", "kind": 12, "detail": "bool => bool", "documentation": "The boolean negation.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:137"}, {"label": "nan", "kind": 12, "detail": "float", "documentation": "No docs\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:624"}, {"label": "neg_infinity", "kind": 12, "detail": "float", "documentation": "Negative infinity.\n\n\n\nfile:///home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml/pervasives.mli:620"}]}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
Now loading /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.cmt
Size 109821
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": [{"range": {"start": {"line": 57, "character": 40}, "end": {"line": 57, "character": 41}}, "message": "Error: Unclosed \"{\" (opened line 57, column 4)", "severity": 1}, {"range": {"start": {"line": 57, "character": 31}, "end": {"line": 57, "character": 40}}, "message": "Error: Unbound value nonSubmit\nHint: Did you mean onSubmit?", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":7},"contentChanges":[{"text":"open Utils;\n\nmodule InputStyles = {\n  open Css;\n\n  let container = style([15->px->padding, position(relative)]);\n  let input =\n    style([\n      5->px->borderRadius,\n      30->px->height,\n      100.00->`percent->width,\n      boxSizing(borderBox),\n    ]);\n  let closeIcon = visible =>\n    style([\n      20->px->top,\n      20->px->right,\n      20->px->fontSize,\n      position(absolute),\n      cursor(`pointer),\n      display(visible ? block : none),\n    ]);\n};\n\nmodule Styles = {\n  open Css;\n\n  let container = selected => {\n    let base = [2->px->padding, 1->px->borderBottom(solid, black)];\n    style(selected ? Theme.selectionColor @ base : base);\n  };\n  let entity =\n    style([\n      display(`flex),\n      justifyContent(spaceBetween),\n      alignItems(center),\n    ]);\n};\n\n[@react.component]\nlet make =\n    (\n      ~total=?,\n      ~edit,\n      ~selected,\n      ~onEdit as onSubmit,\n      ~name,\n      ~id,\n      ~displayOnEntityClick,\n    ) => {\n  let nameAndTotal =\n    fun\n    | Some(t) when t > 1 => name ++ \" / \" ++ string_of_int(t)\n    | _ => name;\n\n  <div className={Styles.container(selected)}>\n    {edit\n       ? <InputBox placeholder=name onSubmit={onSubmit(id)} />\n       : <div className=Styles.entity>\n           {nameAndTotal(total)->s}\n           {selected ? displayOnEntityClick(id) : React.null}\n         </div>}\n  </div>;\n};"}]}}
Running diagnostics for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
➡️ running compiler /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -c -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs' -I '/home/mthorning/Documents/code/boxpacker/ui/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-css/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/reason-react/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/@glennsl/bs-json/lib/bs/src' -I '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx -open Boxpacker -ppx '/home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsc.exe -as-ppx -bs-jsx 3' -w +a-4-9-40-41-42-50-61-102 -bs-re-out -impl /home/mthorning/Documents/code/boxpacker/ui/node_modules/.lsp/Entity-Boxpacker.ast with pwd /home/mthorning/Documents/code/boxpacker/ui
<< Replacing lastDefinitions for file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///home/mthorning/Documents/code/boxpacker/ui/src/Entity.re","version":7}}}
>> Build system running: /home/mthorning/Documents/code/boxpacker/ui/node_modules/bs-platform/linux/bsb.exe -make-world
>>> stdout
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
bsb: no work to do.
>>> stderr

Affected files: 
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///home/mthorning/Documents/code/boxpacker/ui/bsconfig.json", "diagnostics": []}}
